[{"path":[]},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement contact@think.fr. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://thinkr-open.github.io/lozen/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to {lozen}","title":"Contributing to {lozen}","text":"outlines propose change {lozen}. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":"all-contribution-welcomed","dir":"","previous_headings":"","what":"All contribution welcomed","title":"Contributing to {lozen}","text":"open contribution, typos new features. guide throughout process make safe position contribute, whatever level R programming.","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":"lozen-partly-uses-fusen-with-flat-files","dir":"","previous_headings":"","what":"{lozen} partly uses {fusen} with flat files","title":"Contributing to {lozen}","text":"details {fusen} please GitHub repo {fusen}. Multiple files package “R/”, “tests/” “vignettes/” issued flat file. case, see Warning top file: “# WARNING - Generated {fusen} dev/flat_xxx.Rmd: edit hand” means need make changes corresponding flat file, inflate() flat file. recommend using fusen::inflate_all() directly takes account modification.","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to {lozen}","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to {lozen}","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to {lozen}","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"ThinkR-open/lozen\", fork = TRUE). Follow Use {lozen} developer README set needed environment variables, make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes Open dev/dev_history_package.Rmd file: rstudioapi::navigateToFile(\"dev/dev_history_package.Rmd\") Find “# time, pushing server” part run commands chunks. Commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to {lozen}","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://thinkr-open.github.io/lozen/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to {lozen}","text":"Please note {lozen} project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://thinkr-open.github.io/lozen/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 ThinkR Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"define-the-name-of-the-principal-branch","dir":"Articles","previous_headings":"","what":"Define the name of the principal branch","title":"aa - Create a new project with GitLab","text":"","code":"git config --global init.defaultBranch main"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"connection-to-gitlab","dir":"Articles","previous_headings":"","what":"Connection to GitLab","title":"aa - Create a new project with GitLab","text":"Store \".Renviron\" usethis::edit_r_environ()","code":"gitlab_url <- Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\")  # GitLab con my_gitlab <- gl_connection(   gitlab_url = gitlab_url,   private_token = Sys.getenv(\"GITLAB_TOKEN\") )  # Set the connection for the session set_gitlab_connection(my_gitlab)"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"create-a-new-project-or-use-an-existing-project","dir":"Articles","previous_headings":"","what":"Create a new project or use an existing project","title":"aa - Create a new project with GitLab","text":", choose : want create new project wan use existing project, previously created Forge Go dedicated subsection .","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"get-groups","dir":"Articles","previous_headings":"Create a new project or use an existing project > Create a new project","what":"Get groups","title":"aa - Create a new project with GitLab","text":"must define group want create project. Replace value \"my_group\" name group. namespace_id group want use used next steps.","code":"# Get user namespace (= group_id) namespace_id <- gitlabr::gitlab(req = \"namespaces\", search = \"my_group\")[[\"id\"]] # If you are not working within a group, please set it to NULL namespace_id <- NULL"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"create-the-new-project","dir":"Articles","previous_headings":"Create a new project or use an existing project > Create a new project","what":"Create the new project","title":"aa - Create a new project with GitLab","text":"Define: name project want create project_name (Choose package name. special character, dot needed) namespace_id group want create project Create new project:","code":"project_name <- \"myrandomproject\" project_id <- create_group_project(   project_name = project_name,   namespace_id = namespace_id,   default_branch = \"main\" )"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"use-an-existing-project","dir":"Articles","previous_headings":"Create a new project or use an existing project","what":"Use an existing project","title":"aa - Create a new project with GitLab","text":"Define: project_id project want use","code":"project_id <- 123456789"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"get-all-information-about-the-project","dir":"Articles","previous_headings":"","what":"Get all information about the project","title":"aa - Create a new project with GitLab","text":"","code":"the_project <- gl_get_project(   project = project_id )  project_name <- the_project[[\"name\"]] group_url <- gsub(the_project[[\"name\"]], \"\", the_project[[\"web_url\"]])"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"clone-your-project-and-add-the-skeleton-for-your-product-package-app-bookdown","dir":"Articles","previous_headings":"","what":"Clone your project and add the skeleton for your product (package, app, bookdown)","title":"aa - Create a new project with GitLab","text":"able create first skeleton product, depending package, Shiny app, etc.","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"define-local-installation-and-clone","dir":"Articles","previous_headings":"Clone your project and add the skeleton for your product (package, app, bookdown)","what":"Define local installation and clone","title":"aa - Create a new project with GitLab","text":"code clone GitLab project locally, path choice (project_path provided, cloned temporary directory).","code":"project_path <- clone_locally(   project_name = the_project[[\"name\"]],   group_url = group_url,   open = FALSE )"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"create-the-skeleton-for-your-product-and-initiate-the-cicd","dir":"Articles","previous_headings":"Clone your project and add the skeleton for your product (package, app, bookdown)","what":"Create the skeleton for your product and initiate the CI/CD","title":"aa - Create a new project with GitLab","text":"initiate new product, please take look following vignette : ac-create--skeleton---r-project--package-app-book-.Rmd.","code":"if (interactive()) {   vignette(\"ac-create-the-skeleton-of-the-r-project--package-app-book-\", package = \"lozen\") }"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"initiate-the-cicd","dir":"Articles","previous_headings":"Clone your project and add the skeleton for your product (package, app, bookdown)","what":"Initiate the CI/CD","title":"aa - Create a new project with GitLab","text":"set continuous integration continuous deployment product, please take look following vignette : ad-set--continuous-integration--deployment--gitlab-ci.Rmd.","code":"if (interactive()) {   vignette(\"ad-set-up-continuous-integration-and-deployment-through-gitlab-ci\", package = \"lozen\") }"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"manage-git-tools-branches-commits-issues-etc-","dir":"Articles","previous_headings":"","what":"Manage git tools (branches, commits, issues, etc.)","title":"aa - Create a new project with GitLab","text":"Please take look following vignette : bb-manage-git-tools--branches-commits-etc--.Rmd.","code":"if (interactive()) {   vignette(\"bb-manage-git-tools--branches-commits-etc--\", package = \"lozen\") }"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"create-and-manage-the-forge-board-and-wiki","dir":"Articles","previous_headings":"","what":"Create and manage the forge board and wiki","title":"aa - Create a new project with GitLab","text":"Please take look following vignette : ba-manage-forge-board-wiki.Rmd.","code":"if (interactive()) {   vignette(\"ba-manage-forge-board-wiki\", package = \"lozen\") }"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-create-a-new-project-with-gitlab.html","id":"visualise-the-status-of-your-project","dir":"Articles","previous_headings":"","what":"Visualise the status of your project","title":"aa - Create a new project with GitLab","text":"Please take look following vignette : ae-create-weekly--github--gitlab.Rmd.","code":"if (interactive()) {   vignette(\"ae-create-weekly-with-github-or-gitlab\", package = \"lozen\") }"},{"path":"https://thinkr-open.github.io/lozen/articles/aa-launch-full-project-all-in-one.html","id":"init-a-new-project-with-everything-in-one-command","dir":"Articles","previous_headings":"","what":"Init a new project with everything in one command","title":"aa - Launch full project - all in one","text":"init_project_with_all() follow ThinkR recommended configuration init new project. default, project R package created https://gitlab.com/ personal repository. , start writing code ! can amend default configuration yaml file. Open default one: file.edit(system.file(\"config_default_thinkr_gitlab.yml\", package = \"lozen\")). Keep lines like change, save configuration like . Next time can run init_project_with_all(project_name = \".wonderful.project\", config_path = \"path////config.yaml\").","code":"if (interactive()) {   # Default on GitLab.com   init_project_with_all(project_name = \"newprojectpkg\")   # Change default options with your own config file   init_project_with_all(project_name = \"newprojectpkg\", config_path = \"<my-config-path>\")   # Add any extra option to override values of your config file once   init_project_with_all(project_name = \"newprojectpkg\", config_path = \"<my-config-path>\", gitlab_namespace_id = \"000\") }"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"define-the-name-of-the-principal-branch","dir":"Articles","previous_headings":"","what":"Define the name of the principal branch","title":"ab - Create a new project with GitHub","text":"","code":"git config --global init.defaultBranch main"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"connexion-to-github","dir":"Articles","previous_headings":"","what":"Connexion to GitHub","title":"ab - Create a new project with GitHub","text":"Store \".Renviron\" usethis::edit_r_environ()","code":"github_url <- \"https://github.com/my_github_profile/\""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"create-a-new-project","dir":"Articles","previous_headings":"Create a new project or use an existing project","what":"Create a new project","title":"ab - Create a new project with GitHub","text":"Define: name project want create repo (choose package name. special character, dot needed) owner group want create project","code":"project_id <- create_group_project_github(   owner = \"owner\",   repo = \"repotocreate\" )"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"use-an-existing-project","dir":"Articles","previous_headings":"Create a new project or use an existing project","what":"Use an existing project","title":"ab - Create a new project with GitHub","text":"Define: owner project want use name project want use repo","code":"owner <- \"owner\" repo <- \"existingrepo\" # Choose as for package name. No special character, only dot if needed."},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"manipulate-your-project-and-add-everything-needed","dir":"Articles","previous_headings":"","what":"Manipulate your project and add everything needed","title":"ab - Create a new project with GitHub","text":"section, able manipulate project. able create first skeleton product, depending package, Shiny app, etc. also able manage GitHub project: create templates, add new special issues (first issues, kick-issue, etc.).","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"define-local-installation-and-clone","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Define local installation and clone","title":"ab - Create a new project with GitHub","text":"code clone GitHub project locally, temporary directory.","code":"project_path <- clone_locally(   group_url = paste0(\"https://github.com/\", owner),   project_name = repo,   open = TRUE )"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"create-r-project-skeleton","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Create R project skeleton","title":"ab - Create a new project with GitHub","text":"Choose package / golem book template R project already created can use","code":"create_r_project(   project_path,   type = c(\"package\"),   name_licence = \"Bob\",   type_licence = usethis::use_mit_license )  create_r_project(   project_path,   type = c(\"golem\"),   name_licence = \"Bob\",   type_licence = usethis::use_mit_license )  create_r_project(   project_path,   type = c(\"book\"),   name_licence = \"Bob\",   type_licence = usethis::use_mit_license ) add_kit_project(   project_path,   name_licence = \"Test\",   type_licence = usethis::use_mit_license ) add_kit_package(project_path)"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"create-weekly","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Create weekly","title":"ab - Create a new project with GitHub","text":"","code":"# The file to create weekly file.copy(   from = system.file(     \"doc\",     \"ae-create-weekly-with-github-or-gitlab.Rmd\",     package = \"lozen\"   ),   to = file.path(     project_path,     \"dev\",     \"lead_dev_create_weekly.Rmd\"   ) )"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"manage-a-calendar","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Manage a calendar","title":"ab - Create a new project with GitHub","text":"Use tools vignette manage calendar project.","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"add-commit-templates","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Add commit templates","title":"ab - Create a new project with GitHub","text":"Tell devs run project gert::git_config_set(repo = project_path, name = \"commit.template\", value = \".github/template_commit\")","code":"add_git_templates(project_path, type = c(\"commit\", \"mr\"), target_dir = \".github\")"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"add-issue-templates","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Add issue templates","title":"ab - Create a new project with GitHub","text":"issue template added issues opened project, based type param : “light” template “full” template contains information required complete issues","code":"gh_add_standard_issue(   project_path = project_path,   language = \"fr\" # you can use \"en\" instead )"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"add-ci-log-check-for-code-coverage","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Add CI log check for Code coverage","title":"ab - Create a new project with GitHub","text":"","code":"# Find the template you need usethis::use_github_action_check_standard()"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"push-to-server","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Push to server","title":"ab - Create a new project with GitHub","text":"","code":"push_main(project_path)"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"start-main-and-create-a-production-branch","dir":"Articles","previous_headings":"Manipulate your project and add everything needed","what":"Start main and create a production branch","title":"ab - Create a new project with GitHub","text":"","code":"create_production(project_path)"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"protect-branches","dir":"Articles","previous_headings":"","what":"Protect branches","title":"ab - Create a new project with GitHub","text":"","code":"protect_branches(project_id) # unprotect if wanted protect_branches(project_id, unprotect = TRUE)"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"no-autoclose-issue-and-coverage-regex","dir":"Articles","previous_headings":"","what":"No autoclose issue and coverage regex","title":"ab - Create a new project with GitHub","text":"","code":"modify_autoclose_and_coverage(project_id, autoclose = TRUE)"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"add-missing-labels","dir":"Articles","previous_headings":"Create the board","what":"Add missing labels","title":"ab - Create a new project with GitHub","text":"","code":"# add_labels(project_id)"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"create-the-board-1","dir":"Articles","previous_headings":"Create the board","what":"Create the board","title":"ab - Create a new project with GitHub","text":"code prepares board issues","code":"add_board_github(owner, repo)"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"create-the-wiki-pages","dir":"Articles","previous_headings":"","what":"Create the wiki pages","title":"ab - Create a new project with GitHub","text":"create wiki project.","code":"add_wikis_github(owner, repo)"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"add-the-first-issue-for-the-client","dir":"Articles","previous_headings":"Add some special issues in the board","what":"Add the first issue for the client","title":"ab - Create a new project with GitHub","text":"","code":"add_issue_clients_github(   owner = owner,   repo = repo )"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"add-the-issue-that-will-be-shown-during-the-kick-off","dir":"Articles","previous_headings":"Add some special issues in the board","what":"Add the issue that will be shown during the kick-off","title":"ab - Create a new project with GitHub","text":"","code":"add_issue_kickoff_github(   owner = owner,   repo = repo )"},{"path":"https://thinkr-open.github.io/lozen/articles/ab-create-a-new-project-with-github.html","id":"add-the-todo-for-the-lead-dev","dir":"Articles","previous_headings":"Add some special issues in the board","what":"Add the todo for the Lead Dev","title":"ab - Create a new project with GitHub","text":"","code":"add_issue_dev_github(   owner = owner,   repo = repo )"},{"path":"https://thinkr-open.github.io/lozen/articles/ac-create-the-skeleton-of-the-r-project--package-app-book-.html","id":"create_r_project-create-a-r-project-with-full-content-skeleton","dir":"Articles","previous_headings":"","what":"create_r_project(): Create a R project with full content skeleton","title":"ac - Create the skeleton of the R project (package, app, book)","text":"","code":"#' \\dontrun{ # path to your local project project_path <- tempfile(\"my.local.project\")  ### R package skeleton create_r_project(   project_path = project_path,   type = c(\"package\"),   name_licence = \"Bob\",   type_licence = usethis::use_proprietary_license )  ### Shiny app create_r_project(   project_path = project_path,   type = c(\"golem\"),   name_licence = \"Bob\",   type_licence = usethis::use_proprietary_license )  ### Bookdown create_r_project(   project_path = project_path,   type = c(\"book\"),   name_licence = \"Bob\",   type_licence = usethis::use_proprietary_license ) #' }"},{"path":"https://thinkr-open.github.io/lozen/articles/ac-create-the-skeleton-of-the-r-project--package-app-book-.html","id":"transform-project-as-book-with-lozen-template-with-create_book_project","dir":"Articles","previous_headings":"","what":"Transform project as book with lozen template with create_book_project()","title":"ac - Create the skeleton of the R project (package, app, book)","text":"","code":"withr::with_tempdir({   project_path <- getwd()   create_book_project(project_path) })"},{"path":"https://thinkr-open.github.io/lozen/articles/ac-create-the-skeleton-of-the-r-project--package-app-book-.html","id":"add_kit_project-add-necessary-files-for-any-r-project","dir":"Articles","previous_headings":"","what":"add_kit_project(): Add necessary files for any R project","title":"ac - Create the skeleton of the R project (package, app, book)","text":"","code":"withr::with_tempdir({   project_path <- getwd()   usethis::create_project(path = project_path, open = FALSE)   add_kit_project(     project_path,     name_licence = \"Bob\",     type_licence = usethis::use_proprietary_license   ) })"},{"path":"https://thinkr-open.github.io/lozen/articles/ac-create-the-skeleton-of-the-r-project--package-app-book-.html","id":"add_kit_package-add-files-necessary-for-a-package-including-golem","dir":"Articles","previous_headings":"","what":"add_kit_package(): Add files necessary for a package, including {golem}","title":"ac - Create the skeleton of the R project (package, app, book)","text":"","code":"withr::with_tempdir({   project_path <- getwd()   usethis::create_package(path = project_path, open = FALSE)   add_kit_package(project_path, type = c(\"package\", \"book\", \"renv\")) })"},{"path":[]},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ac-create-the-skeleton-of-the-r-project--package-app-book-.html","id":"use-a-dev-history-file","dir":"Articles","previous_headings":"","what":"Use a dev history file","title":"ac - Create the skeleton of the R project (package, app, book)","text":"use_dev_history() creates dev_history.Rmd files: “dev_history_package”: Instructions create develop R package “dev_history_renv”: Instructions init renv function put file “dev” folder.","code":"withr::with_tempdir({   use_dev_history(path = \".\", type = c(\"package\", \"book\", \"renv\")) })"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"initiate-the-continuous-integration-ci-continuous-deployment-cd","dir":"Articles","previous_headings":"","what":"Initiate the Continuous Integration (CI) / Continuous Deployment (CD)","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"operations set Gitlab : - continuous integration project - continuous deployment, Gitlab Pages, pkgdown (working R package golem app) bookdown. .gitlab-ci.yml file created root project. Please ensure file pushed repository CI/CD working. Please note .gitlab-ci.yml file already present overwritten.","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"for-a-r-package-or-a-golem-app","dir":"Articles","previous_headings":"Initiate the Continuous Integration (CI) / Continuous Deployment (CD)","what":"For a R package or a {golem} app","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"Please note R/ tests/ folders missing R package created using create_r_project(type = \"package\"). folders remains missing, “coverage” job “test” stage CI pipeline fail (following steps CI pipeline nevertheless run).","code":"lozen::use_gitlab_ci(   project_path = project_path,   type = \"check-coverage-pkgdown\" )"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"for-a-book","dir":"Articles","previous_headings":"Initiate the Continuous Integration (CI) / Continuous Deployment (CD)","what":"For a book","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"Two options allowed parameter bookdown_output_format: “lozen::paged_template” “lozen::bs4_book_template”. former render book using pagedown::html_paged latter use bookdown::bs4_book.","code":"lozen::use_gitlab_ci(   project_path = project_path,   type = \"bookdown\",   bookdown_output_format = \"lozen::paged_template\" )  # OR  lozen::use_gitlab_ci(   project_path = project_path,   type = \"bookdown\",   bookdown_output_format = \"lozen::bs4_book_template\" )"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"how-can-i-find-the-pkgdownbook-associated-with-my-project","dir":"Articles","previous_headings":"Initiate the Continuous Integration (CI) / Continuous Deployment (CD)","what":"How can I find the pkgdown/book associated with my project","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"default, book project created using lozen::create_r_project(type = \"book\") contain .Rproj file, standing RStudio project. file missing “Git” panel won’t visible RStudio. wish display panel, must create RStudio project within directory book files located. Please following : - Click “File” tab - New project - Existing directory - Select directory book option use Terminal use Git command line interface. former steps done, can commit changes push repository remote. Thereafter, able see pipeline running Gitlab. pipeline raise error, deployed pkgdown/book now hosted Gitlab pages. working https://gitlab.com, url https://username.gitlab.io/.repository.name.","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"cd-of-a-pkgdown","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect","what":"CD of a pkgdown","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"following working, please ensure working valid R package. project must associated repository present Gitlab. done yet please go vignette vignettes/aa-create--new-project--gitlab.Rmd follow steps related creation project Gitlab R package skeleton. running following commands please ensure working directory R package project.","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"create-the-pkgdown","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a pkgdown","what":"Create the pkgdown","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"","code":"usethis::use_pkgdown() pkgdown::build_site(override = list(destination = \"inst/site\"))"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"to-be-done-on-your-r-project","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a pkgdown > Initiate the deployment of your pkgdown","what":"To be done on your R project","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":".gitlab-ci.yml file already present project now completed new staged, specific deployment Connect. aware running command multiple times duplicate steps .gitlab-ci.yml file. avoided.","code":"lozen::use_gitlab_ci_deploy_connect_pkgdown()"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"to-be-done-on-gitlab","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a pkgdown > Initiate the deployment of your pkgdown","what":"To be done on Gitlab","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"environment variables must set Gitlab CI/CD working. ’ll need define : , may already set .Renviron file (see dedicated section {lozen} README). familiar defining environement variable gitlab, please follow official documentation. done, can commit changes push repository remote. Thereafter, able see pipeline running Gitlab.","code":"CONNECT_URL <- \"https://my.connect.url\" CONNECT_NAME <- \"my.connect.server.name\" CONNECT_USER <- \"my.connect.username\" CONNECT_TOKEN <- \"my.api.key.generated.in.connect\" APP_NAME <- \"the.name.of.your.pkgdown.on.connect\" # APP_NAME is not mandatory; whether it is not provided, it will be replaced by the name of your project on Gitlab"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"how-can-i-find-the-pkgdown-associated-with-my-r-package-on-posit-connect","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a pkgdown > Initiate the deployment of your pkgdown","what":"How can I find the pkgdown associated with my R package on Posit Connect","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"pipeline raise error, app now deployed Posit Connect. can now log Posit Connect enjoy pkgdown !","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"cd-of-a-golem-shiny-app","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect","what":"CD of a golem shiny app","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"following working, please ensure working shiny app initiated {golem}. app project must associated repository present Gitlab. done yet please go vignette vignettes/aa-create--new-project--gitlab.Rmd follow steps related creation project Gitlab shiny app skeleton. running following commands please ensure working directory golem project.","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"add-an-app-r-at-the-root-of-your-package-to-deploy-on-rstudio-connect","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a golem shiny app","what":"Add an app.R at the root of your package to deploy on RStudio Connect","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"","code":"golem::add_rstudioconnect_file()"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"to-be-done-on-your-r-project-1","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a golem shiny app > Initiate the deployment of your app","what":"To be done on your R project","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":".gitlab-ci.yml file already present project now completed new staged, specific deployment Connect. aware running command multiple times duplicate steps .gitlab-ci.yml file. avoided.","code":"use_gitlab_ci_deploy_connect_shiny()"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"to-be-done-on-gitlab-1","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a golem shiny app > Initiate the deployment of your app","what":"To be done on Gitlab","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"environment variables must set Gitlab CI/CD working. ’ll need define : , may already set .Renviron file (see dedicated section {lozen} README). familiar defining environement variable gitlab, please follow official documentation. done, can commit changes push repository remote. Thereafter, able see pipeline running Gitlab.","code":"CONNECT_URL <- \"https://my.connect.url\" CONNECT_NAME <- \"my.connect.server.name\" CONNECT_USER <- \"my.connect.username\" CONNECT_TOKEN <- \"my.api.key.generated.in.connect\" APP_NAME <- \"the.name.of.your.app.on.connect\" # APP_NAME is not mandatory; whether it is not provided, it will be replaced by the name of your project on Gitlab"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"how-can-i-find-the-app-associated-with-my-golem-package","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a golem shiny app > Initiate the deployment of your app","what":"How can I find the app associated with my {golem} package","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"pipeline raise error, app now deployed Posit Connect. can now log Posit Connect enjoy app !","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"cd-of-a-book","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect","what":"CD of a book","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"following working, please ensure working book project. app project must associated repository present Gitlab. done yet please go vignette vignettes/aa-create--new-project--gitlab.Rmd follow steps related creation project Gitlab book project skeleton. running following commands please ensure working directory book project. .RProj exists directory book files folders stored, can use setwd(\"path///book\").","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"build-your-book","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a book","what":"Build your book","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"Two options allowed parameter output_format: “lozen::paged_template” “lozen::bs4_book_template”. former render book using pagedown::html_paged latter use bookdown::bs4_book.","code":"lozen::render_book(\"index.Rmd\", output_format = \"lozen::paged_template\") # OR lozen::render_book(\"index.Rmd\", output_format = \"lozen::bs4_book_template\")"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"to-be-done-on-your-r-project-2","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a book > Initiate the deployment of your book","what":"To be done on your R project","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":".gitlab-ci.yml file already present project now completed new staged, specific deployment Connect. aware running command multiple times duplicate steps .gitlab-ci.yml file. avoided. Important: sure _book directory listed .gitignore file ! note: wish compile html files odt files please add following produced .gitlab-ci.yml file :","code":"lozen::use_gitlab_ci_deploy_connect_bookdown() - Rscript -e 'bookdown::render_book(\"index.Rmd\", output_format = \"lozen::paged_template\", clean = FALSE);file.copy(\"_main.html\", \"public/index.html\")' - Rscript -e 'lozen::html_to_odt(input_html = \"public/index.html\", output_odt = \"public/rapport.odt\")' - Rscript -e 'toutes_fiches <- list.files(pattern = \"[.]Rmd\");lozen:::compile_fiches(fiches = toutes_fiches, outdir = \"public\", type = c(\"html\", \"odt\"), open=FALSE)' - Rscript -e 'utils::zip(files = list.files(\"public\", pattern = \"[.]odt\", full.names = TRUE ), zipfile = file.path(\"public\", \"odt_files.zip\"))' - mv _main.knit.md public/_main.knit.md"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"to-be-done-on-gitlab-2","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a book > Initiate the deployment of your book","what":"To be done on Gitlab","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"environment variables must set Gitlab CI/CD working. ’ll need define : , may already set .Renviron file (see dedicated section {lozen} README). familiar defining environement variable gitlab, please follow official documentation. default, book project created using lozen::create_r_project(type = \"book\") contain .Rproj file, standing RStudio project. file missing “Git” panel won’t visible RStudio. wish display panel, must create RStudio project within directory book files located. Please following : - Click “File” tab - New project - Existing directory - Select directory book option use Terminal use Git command line interface. done, can commit changes push repository remote. Important: pushing, sure _book directory listed .gitignore file ! Thereafter, able see pipeline running Gitlab.","code":"CONNECT_URL <- \"https://my.connect.url\" CONNECT_NAME <- \"my.connect.server.name\" CONNECT_USER <- \"my.connect.username\" CONNECT_TOKEN <- \"my.api.key.generated.in.connect\" APP_NAME <- \"the.name.of.your.book.on.connect\" # APP_NAME is not mandatory; whether it is not provided, it will be replaced by the name of your project on Gitlab"},{"path":"https://thinkr-open.github.io/lozen/articles/ad-set-up-continuous-integration-and-deployment-through-gitlab-ci.html","id":"how-can-i-find-the-book-deployed-on-posit-connect","dir":"Articles","previous_headings":"Continuous deployment on Posit Connect > CD of a book > Initiate the deployment of your book","what":"How can I find the book deployed on Posit Connect ?","title":"ad - Set up continuous integration and continuous deployment for Gitlab CI/CD","text":"pipeline raise error, book now deployed Posit Connect. can now log Posit Connect enjoy app !","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ae-create-weekly-with-github-or-gitlab.html","id":"create-a-weekly-for-gitlab-with-gl_create_weekly","dir":"Articles","previous_headings":"For a project on Gitlab","what":"Create a weekly for GitLab with gl_create_weekly()","title":"ae - Create Weekly with GitHub or GitLab","text":"","code":"# example-weekly = 37585948 (on GitLab.com) out <- gl_create_weekly(   project_id = \"<get_your_id_project>\",   date_min = Sys.Date() - 7,   private_token = Sys.getenv(\"GITLAB_TOKEN\") ) cat(out$weekly_info) # clipr::write_clip(out$weekly_info)  # Get the daily weekly for a past day out_past <- gl_create_daily(   project_id = \"<get_your_id_project>\",   date_daily = \"2022-07-20\",   private_token = Sys.getenv(\"GITLAB_TOKEN\") ) cat(out_past$weekly_info)  # Get the daily weekly for a today out_today <- gl_create_daily(   project_id = \"<get_your_id_project>\",   private_token = Sys.getenv(\"GITLAB_TOKEN\") ) cat(out_today$weekly_info) # clipr::write_clip(out$weekly_info)"},{"path":"https://thinkr-open.github.io/lozen/articles/ae-create-weekly-with-github-or-gitlab.html","id":"visualise-the-nature-of-the-developments-for-gitlab-with-visualise_commits","dir":"Articles","previous_headings":"For a project on Gitlab","what":"Visualise the nature of the developments for GitLab with visualise_commits()","title":"ae - Create Weekly with GitHub or GitLab","text":"main branch considered.","code":"visualise_commits(   project_id = \"<get_your_id_project>\",   gitlab_url = Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\"),   date_min = \"2022-09-22\",   date_max = \"2022-09-29\",   private_token = Sys.getenv(\"GITLAB_TOKEN\") )  # Or on project already cloned tempdir <-   clone_locally(full_url = \"https://gitlab.com/my_name/my_repo\", open = FALSE)  visualise_commits(   path = tempdir,   date_min = \"2022-09-22\",   date_max = \"2022-09-29\" )"},{"path":"https://thinkr-open.github.io/lozen/articles/ae-create-weekly-with-github-or-gitlab.html","id":"visualise-the-progress-of-the-milestones-for-gitlab-with-gl_get_milestones_progress","dir":"Articles","previous_headings":"For a project on Gitlab","what":"Visualise the progress of the milestones for GitLab with gl_get_milestones_progress()","title":"ae - Create Weekly with GitHub or GitLab","text":"","code":"gl_get_milestones_progress(   project_id = \"<get_your_id_project>\",   private_token = Sys.getenv(\"GITLAB_TOKEN\") )"},{"path":"https://thinkr-open.github.io/lozen/articles/ae-create-weekly-with-github-or-gitlab.html","id":"for-a-project-on-github","dir":"Articles","previous_headings":"","what":"For a project on Github","title":"ae - Create Weekly with GitHub or GitLab","text":"COMPLETED","code":""},{"path":"https://thinkr-open.github.io/lozen/articles/af-build-a-pkgdown-with-reports.html","id":"build_pkgdown_with_reports-build-a-pkgdown-with-coverage-and-test-reports","dir":"Articles","previous_headings":"","what":"build_pkgdown_with_reports() : build a pkgdown with coverage and test reports","title":"af - Build a pkgdown with reports","text":"function generate pkgdown current package using pkgdown, together covr testdown reports. reports embedded inside pkgdown accessible navigation bar. requires functions covr::report(), testdown::test_down, gitdown::git_down suggested package imports {lozen}.","code":"#' \\dontrun{ # build_pkgdown_with_reports( #    pkg = \".\", #    pkgdown_path = \"public\", #    assets_path = \"pkgdown/assets\", #    reports = c(\"testdown\",\"coverage\") #' }"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"add-labels","dir":"Articles","previous_headings":"","what":"Add labels","title":"ba - Manage forge board and wiki","text":"add labels “Prêt”, “En cours”, etc. project.","code":"add_labels(   project_id = project_id )"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"create-the-board","dir":"Articles","previous_headings":"","what":"Create the board","title":"ba - Manage forge board and wiki","text":"code prepares board issues: Issues > Board > Add List labels duplicated, go Issues > Labels. Delete “project labels” clicking 3 vertical dots, Delete. list labels now empty, go back board, still global labels available, one copy.","code":"add_board(   project_id = project_id )"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"add-the-first-issue-for-the-client","dir":"Articles","previous_headings":"Create the board > Add some special issues in the board","what":"Add the first issue for the client","title":"ba - Manage forge board and wiki","text":"","code":"add_issue_clients(   project_id = project_id,   project_name = project_name,   group_url = group_url )"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"add-the-issue-that-will-be-shown-during-the-kick-off","dir":"Articles","previous_headings":"Create the board > Add some special issues in the board","what":"Add the issue that will be shown during the kick-off","title":"ba - Manage forge board and wiki","text":"","code":"add_issue_kickoff(   project_id = project_id )"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"add-the-todo-for-the-lead-dev","dir":"Articles","previous_headings":"Create the board > Add some special issues in the board","what":"Add the todo for the Lead Dev","title":"ba - Manage forge board and wiki","text":"","code":"add_issue_dev(   project_id = project_id,   group_url = group_url,   project_name = project_name )"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"create-the-wiki-pages","dir":"Articles","previous_headings":"","what":"Create the wiki pages","title":"ba - Manage forge board and wiki","text":"create pages wiki project: Home Comptes-rendus Key dates","code":"add_wikis(   project_id = project_id,   project_name = project_name,   group_url = group_url,   group = basename(group_url) )"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"no-autoclose-issue-and-coverage-regex","dir":"Articles","previous_headings":"","what":"No autoclose issue and coverage regex","title":"ba - Manage forge board and wiki","text":"","code":"modify_autoclose_and_coverage(   project_id = project_id )"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"add-commit-templates","dir":"Articles","previous_headings":"","what":"Add commit templates","title":"ba - Manage forge board and wiki","text":"Tell devs run project gert::git_config_set(repo = project_path, name = \"commit.template\", value = \".gitlab/template_commit\")","code":"add_git_templates(   project_path = project_path,   type = c(\"commit\", \"mr\") )"},{"path":"https://thinkr-open.github.io/lozen/articles/ba-manage-forge-board-wiki.html","id":"add-issues-templates","dir":"Articles","previous_headings":"","what":"Add issues templates","title":"ba - Manage forge board and wiki","text":"2 templates added issues opened project: “light” template “full” template contains information required complete issues","code":"gl_add_template_issue(   project_path = project_path,   language = \"fr\" # you can use \"en\" instead )"},{"path":"https://thinkr-open.github.io/lozen/articles/bb-manage-git-tools--branches-commits-etc--.html","id":"define-local-installation-and-clone","dir":"Articles","previous_headings":"","what":"Define local installation and clone","title":"bb - Manage git tools (branches, commits, etc.)","text":"code clone GitLab project locally, temporary directory.","code":"project_path <- clone_locally(   project_name = the_project[[\"name\"]],   group_url = group_url,   open = FALSE )"},{"path":"https://thinkr-open.github.io/lozen/articles/bb-manage-git-tools--branches-commits-etc--.html","id":"push-to-server","dir":"Articles","previous_headings":"","what":"Push to server","title":"bb - Manage git tools (branches, commits, etc.)","text":"","code":"push_main(   project_path = project_path )"},{"path":"https://thinkr-open.github.io/lozen/articles/bb-manage-git-tools--branches-commits-etc--.html","id":"create-a-production-branch","dir":"Articles","previous_headings":"","what":"Create a production branch","title":"bb - Manage git tools (branches, commits, etc.)","text":"","code":"create_production(   project_path = project_path )"},{"path":"https://thinkr-open.github.io/lozen/articles/bb-manage-git-tools--branches-commits-etc--.html","id":"protect-branches","dir":"Articles","previous_headings":"","what":"Protect branches","title":"bb - Manage git tools (branches, commits, etc.)","text":"","code":"protect_branches(   project_id = project_id )"},{"path":"https://thinkr-open.github.io/lozen/articles/bb-manage-git-tools--branches-commits-etc--.html","id":"no-autoclose-issue-and-coverage-regex","dir":"Articles","previous_headings":"","what":"No autoclose issue and coverage regex","title":"bb - Manage git tools (branches, commits, etc.)","text":"","code":"modify_autoclose_and_coverage(   project_id = project_id )"},{"path":"https://thinkr-open.github.io/lozen/articles/bb-manage-git-tools--branches-commits-etc--.html","id":"add-commit-templates","dir":"Articles","previous_headings":"","what":"Add commit templates","title":"bb - Manage git tools (branches, commits, etc.)","text":"Tell devs run project gert::git_config_set(repo = project_path, name = \"commit.template\", value = \".gitlab/template_commit\")","code":"add_git_templates(   project_path = project_path,   type = c(\"commit\", \"mr\") )"},{"path":"https://thinkr-open.github.io/lozen/articles/bb-manage-git-tools--branches-commits-etc--.html","id":"add-issues-templates","dir":"Articles","previous_headings":"","what":"Add issues templates","title":"bb - Manage git tools (branches, commits, etc.)","text":"2 templates added issues opened project: “light” template “full” template contains information required complete issues","code":"gl_add_template_issue(   project_path = project_path,   language = \"fr\" # you can use \"en\" instead )"},{"path":"https://thinkr-open.github.io/lozen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sébastien Rochette. Author, maintainer. Margot Brard. Author. Murielle Delmotte. Author. Swann Floc'hlay. Author. Yohann Mansiaux. Author. ThinkR. Copyright holder.","code":""},{"path":"https://thinkr-open.github.io/lozen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rochette S, Brard M, Delmotte M, Floc'hlay S, Mansiaux Y (2023). lozen: Management tools missions. R package version 1.3.0.","code":"@Manual{,   title = {lozen: Management tools for missions},   author = {Sébastien Rochette and Margot Brard and Murielle Delmotte and Swann Floc'hlay and Yohann Mansiaux},   year = {2023},   note = {R package version 1.3.0}, }"},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"lozen-","dir":"","previous_headings":"","what":"Management tools for missions","title":"Management tools for missions","text":"objective {lozen} centralize project management tools Devs Lead Devs. use package, user developer, define tokens environment variables. Go dedicated section “Use {lozen} user” “Use {lozen} developer”.","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"from-github","dir":"","previous_headings":"","what":"From Github","title":"Management tools for missions","text":"","code":"remotes::install_github(   repo = \"ThinkR-open/lozen\",   build_vignettes = TRUE )"},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"from-r-universe","dir":"","previous_headings":"","what":"From r-universe","title":"Management tools for missions","text":"","code":"install.packages(   \"lozen\",   repos = c(\"https://thinkr-open.r-universe.dev\", \"https://cloud.r-project.org\") ) #> Installation du package dans 'C:/Users/yohann/AppData/Local/R/win-library/4.2' #> (car 'lib' n'est pas spécifié) #> le package 'lozen' a été décompressé et les sommes MD5 ont été vérifiées avec succés #>  #> Les packages binaires téléchargés sont dans #>  C:\\Users\\yohann\\AppData\\Local\\Temp\\Rtmp86E83L\\downloaded_packages"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"use-lozen-as-user","dir":"","previous_headings":"","what":"Use {lozen} as user","title":"Management tools for missions","text":"need use kind .Renviron file: can use command line usethis::edit_r_environ() open .Renviron file. Save values inside mentioned , restart R session. Depending needs, set (GitLab, GitHub Posit Connect), just . See details sections information create . wish use function related Posit Connect, must set Connect account manually within Rstudio.","code":"GITLAB_TOKEN=\"my.token.generated.in.gitlab\" GITLAB_URL=\"https://my.gitlab.url\" GITHUB_PAT=\"my.personal.access.token.generated.in.github\" CONNECT_URL=\"https://my.connect.url\" CONNECT_NAME=\"my.connect.server.name\" CONNECT_USER=\"my.connect.username\" CONNECT_TOKEN=\"my.api.key.generated.in.connect\""},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"use-lozen-as-developer","dir":"","previous_headings":"","what":"Use {lozen} as developer","title":"Management tools for missions","text":"Note unit tests create publish elements instances (GitLab, GitHub, Posit Connect). objects automatically deleted end tests. need use kind .Renviron file: can use command line usethis::edit_r_environ() open .Renviron file. Save values inside mentioned , restart R session. set (GitLab, GitHub Posit Connect), sure unit tests can launched. See details sections information create . Please note unit tests using gert might show prompt asking gitlab username password. latter, must provide gitlab password, token. tests deploying content Posit Connect, must set Connect account manually within Rstudio must deployed manually content least able run tests.","code":"GITLAB_TOKEN=\"my.token.generated.in.gitlab\" GITLAB_URL=\"https://my.gitlab.url\" ALLOW_CI_TESTS_ON_GITLAB=\"TRUE\" GITHUB_PAT=\"my.personal.access.token.generated.in.github\" CONNECT_URL=\"https://my.connect.url\" CONNECT_NAME=\"my.connect.server.name\" CONNECT_USER=\"my.connect.username\" CONNECT_TOKEN=\"my.api.key.generated.in.connect\" ALLOW_TESTS_TO_DEPLOY_ON_CONNECT=\"TRUE\""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"gitlab","dir":"","previous_headings":"More details about how to create tokens and define environment variables","what":"GitLab","title":"Management tools for missions","text":"GITLAB_TOKEN: Create personal access token GitLab, rights: “read_repository”, “write_repository”, “api”, “read_api” GITLAB_URL: url gitlab instance - gitlab.com, specify , default value used package","code":""},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"github","dir":"","previous_headings":"More details about how to create tokens and define environment variables","what":"GitHub","title":"Management tools for missions","text":"GITHUB_PAT: Create personal access token GitHub - following scopes must granted token “admin:org”, “delete_repo”, “project”, “repo”, “user”, “workflow.”","code":""},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"posit-connect","dir":"","previous_headings":"More details about how to create tokens and define environment variables","what":"Posit Connect","title":"Management tools for missions","text":"CONNECT_URL: Url Posit Connect CONNECT_NAME: Name Posit Connect server - know information, please use rsconnect::accounts()$server. connect, specify , default value defined Posit Connect first connection made server CONNECT_USER: username Posit Connect CONNECT_TOKEN: Personal access token Posit Connect - please follow official documentation create ","code":""},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Management tools for missions","text":"Access pkgdown: https://thinkr-open.github.io/lozen/","code":""},{"path":"https://thinkr-open.github.io/lozen/index.html","id":"vignettesarticles","dir":"","previous_headings":"","what":"Vignettes/articles","title":"Management tools for missions","text":"Documentation dedicated users (Devs, Lead Devs) aa - Create new project GitLab: Create new R project mission - managed GitLab, everything needed (R project skeleton, init git, init project GitLab, etc.) ab - Create new project GitHub: Create new R project mission - managed GitHub, everything needed (R project skeleton, init git, init project GitLab, etc.) (WIP) ac - Create skeleton R project (package, app, book): Add skeleton R product project ad - Set continuous integration continuous deployment Gitlab CI/CD: Set publication product ae - Create Weekly GitHub GitLab: Generate weekly/daily mission af - Build pkgdown reports: Build pkgdown coverage test reports ba - Manage forge board wiki: Create manage communication tools Gitlab bb - Manage git tools (branches, commits, etc.): Manage repository Gitlab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_board.html","id":null,"dir":"Reference","previous_headings":"","what":"Add board in the correct order — add_board","title":"Add board in the correct order — add_board","text":"Add board correct order","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_board.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add board in the correct order — add_board","text":"","code":"add_board(   project_id,   name = \"Development\",   labels_order = c(\"Bloqué\", \"Prêt\", \"En cours\", \"Révision\", \"Pré-validation\",     \"A valider\"),   lg = \"fr\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/add_board.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add board in the correct order — add_board","text":"project_id project_id name Name Board labels_order Name labels already existing project lg language board, \"fr\" \"en\"","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_board.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add board in the correct order — add_board","text":"","code":"if (FALSE) { add_board(   project_id = project_id ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_board_github.html","id":null,"dir":"Reference","previous_headings":"","what":"add_board_github — add_board_github","title":"add_board_github — add_board_github","text":"add_board_github","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_board_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add_board_github — add_board_github","text":"","code":"add_board_github(   owner,   repo,   columns = c(\"Open\", \"Blocked\", \"Meta\", \"Ready\", \"In Progress\", \"Review\", \"Validation\") )"},{"path":"https://thinkr-open.github.io/lozen/reference/add_board_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add_board_github — add_board_github","text":"owner Owner repository repo Repository name columns Names columns create Board","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_board_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add_board_github — add_board_github","text":"","code":"if (FALSE) { add_board_github(   owner = \"ghowner\",   repo = \"areponame\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_git_templates.html","id":null,"dir":"Reference","previous_headings":"","what":"Add MR GitLab or GitHub template and local issue template — add_git_templates","title":"Add MR GitLab or GitHub template and local issue template — add_git_templates","text":"Add MR GitLab GitHub template local issue template","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_git_templates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add MR GitLab or GitHub template and local issue template — add_git_templates","text":"","code":"add_git_templates(   project_path = \".\",   type = c(\"commit\", \"mr\"),   target_dir = \".gitlab\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/add_git_templates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add MR GitLab or GitHub template and local issue template — add_git_templates","text":"project_path project_path type type target_dir Directory name save templates","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_git_templates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add MR GitLab or GitHub template and local issue template — add_git_templates","text":"Side effect: template .gitlab/.github .git","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_git_templates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add MR GitLab or GitHub template and local issue template — add_git_templates","text":"","code":"if (FALSE) { add_git_templates(   project_path = project_path,   type = c(\"commit\", \"mr\") ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients.html","id":null,"dir":"Reference","previous_headings":"","what":"Add First issue client for GitLab — add_issue_clients","title":"Add First issue client for GitLab — add_issue_clients","text":"Add First issue client GitLab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add First issue client for GitLab — add_issue_clients","text":"","code":"add_issue_clients(project_id, project_name, group_url)"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add First issue client for GitLab — add_issue_clients","text":"project_id project_id project_name project_name group_url group_url","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add First issue client for GitLab — add_issue_clients","text":"tibble issue added GitLab infos","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add First issue client for GitLab — add_issue_clients","text":"","code":"if (FALSE) { add_issue_clients(   project_id = \"<get_your_id_project>\",   project_name = \"<get_your_project_name>\",   group_url = \"<group_url_repo>\" # should looks like \"https://gitlab.com/cervan.girard/\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Add First issue client for GitHub — add_issue_clients_github","title":"Add First issue client for GitHub — add_issue_clients_github","text":"Add First issue client GitHub","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add First issue client for GitHub — add_issue_clients_github","text":"","code":"add_issue_clients_github(owner, repo)"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add First issue client for GitHub — add_issue_clients_github","text":"owner GitHub owner (username organisation) repo Name repository","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add First issue client for GitHub — add_issue_clients_github","text":"tibble issue added GitLab infos","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_clients_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add First issue client for GitHub — add_issue_clients_github","text":"","code":"if (FALSE) { add_issue_clients_github(   owner = \"owner\",   repo = \"repo\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Create issue for developers to initiate the project — add_issue_dev","title":"Create issue for developers to initiate the project — add_issue_dev","text":"Create issue developers initiate project","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create issue for developers to initiate the project — add_issue_dev","text":"","code":"add_issue_dev(project_id, project_name, group_url)"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create issue for developers to initiate the project — add_issue_dev","text":"project_id project_id project_name project_name group_url group_url","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create issue for developers to initiate the project — add_issue_dev","text":"Side effect: new issue GitLab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create issue for developers to initiate the project — add_issue_dev","text":"","code":"# exemple nécessite des opérations sur gitlab : à voir if (FALSE) { add_issue_dev(   project_id = \"<get_your_id_project>\",   project_name = \"<get_your_project_name>\",   group_url = \"<group_url_repo>\" # should looks like \"https://gitlab.com/cervan.girard/\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Create issue for dev on github — add_issue_dev_github","title":"Create issue for dev on github — add_issue_dev_github","text":"Create dev first issue github","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create issue for dev on github — add_issue_dev_github","text":"","code":"add_issue_dev_github(owner, repo)"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create issue for dev on github — add_issue_dev_github","text":"owner owner project repo name project","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create issue for dev on github — add_issue_dev_github","text":"tibble github issue info","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_dev_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create issue for dev on github — add_issue_dev_github","text":"","code":"if (FALSE) { add_issue_dev_github(   owner = \"owner\",   repo = \"repo\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Kickoff issue client for GitLab — add_issue_kickoff","title":"Add Kickoff issue client for GitLab — add_issue_kickoff","text":"Add Kickoff issue client GitLab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Kickoff issue client for GitLab — add_issue_kickoff","text":"","code":"add_issue_kickoff(project_id)"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Kickoff issue client for GitLab — add_issue_kickoff","text":"project_id project_id","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Kickoff issue client for GitLab — add_issue_kickoff","text":"tibble issue added GitLab infos","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Kickoff issue client for GitLab — add_issue_kickoff","text":"","code":"if (FALSE) { add_issue_kickoff(project_id = \"<get_your_id_project>\") }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Kickoff issue for GitHub — add_issue_kickoff_github","title":"Add Kickoff issue for GitHub — add_issue_kickoff_github","text":"Add Kickoff issue GitHub","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Kickoff issue for GitHub — add_issue_kickoff_github","text":"","code":"add_issue_kickoff_github(owner, repo)"},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Kickoff issue for GitHub — add_issue_kickoff_github","text":"owner GitHub owner (username organisation) repo Name repository","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Kickoff issue for GitHub — add_issue_kickoff_github","text":"tibble issue added GitHub infos","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_issue_kickoff_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Kickoff issue for GitHub — add_issue_kickoff_github","text":"","code":"if (FALSE) { add_issue_kickoff_github(   owner = \"owner\",   repo = \"repo\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Add files necessary for a package, including golem — add_kit_package","title":"Add files necessary for a package, including golem — add_kit_package","text":"Add files necessary package, including golem","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add files necessary for a package, including golem — add_kit_package","text":"","code":"add_kit_package(   project_path = \".\",   type = c(\"package\", \"renv\"),   pkgdown_yml = NULL )"},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add files necessary for a package, including golem — add_kit_package","text":"project_path project_path type Type dev_history. Multiple types possible among \"package\", \"book\", \"renv\". pkgdown_yml path yaml conf pkgdown","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_package.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add files necessary for a package, including golem — add_kit_package","text":"Side Effect, add new files : dev/dev_history templates pkgdown pkgodwn_yml null testthat","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add files necessary for a package, including golem — add_kit_package","text":"","code":"withr::with_tempdir({   project_path <- getwd()   usethis::create_package(path = project_path, open = FALSE)   add_kit_package(project_path, type = c(\"package\", \"book\", \"renv\")) }) #> ✔ Setting active project to '/tmp/Rtmpnpj01j/file173e7a2e7cb9' #> ✔ Creating 'R/' #> ✔ Writing 'DESCRIPTION' #> Package: file173e7a2e7cb9 #> Title: What the Package Does (One Line, Title Case) #> Version: 0.0.0.9000 #> Authors@R (parsed): #>     * First Last <first.last@example.com> [aut, cre] (YOUR-ORCID-ID) #> Description: What the package does (one paragraph). #> License: `use_mit_license()`, `use_gpl3_license()` or friends to #>     pick a license #> Encoding: UTF-8 #> Roxygen: list(markdown = TRUE) #> RoxygenNote: 7.2.3 #> ✔ Writing 'NAMESPACE' #> ✔ Setting active project to '<no active project>' #> ✔ Setting active project to '/tmp/Rtmpnpj01j/file173e7a2e7cb9' #> ✔ Adding 'testthat' to Suggests field in DESCRIPTION #> ✔ Adding '3' to Config/testthat/edition #> ✔ Creating 'tests/testthat/' #> ✔ Writing 'tests/testthat.R' #> • Call `use_test()` to initialize a basic test file and open it for editing. #> ✔ Writing 'tests/testthat/test-start.R' #> • Edit 'tests/testthat/test-start.R' #> ✔ Setting active project to '<no active project>' #> Kit package created #> [1] \"/tmp/Rtmpnpj01j/file173e7a2e7cb9\""},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Add necessary files for any R project — add_kit_project","title":"Add necessary files for any R project — add_kit_project","text":"Add necessary files R project","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add necessary files for any R project — add_kit_project","text":"","code":"add_kit_project(project_path = \".\", name_licence, type_licence)"},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add necessary files for any R project — add_kit_project","text":"project_path project_path name_licence Name licence type_licence function, example : type_licence = usethis::use_proprietary_license","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add necessary files for any R project — add_kit_project","text":"Side Effect, add new files : gitattributes NEWS.md","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_kit_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add necessary files for any R project — add_kit_project","text":"","code":"withr::with_tempdir({   project_path <- getwd()   usethis::create_project(path = project_path, open = FALSE)   add_kit_project(     project_path,     name_licence = \"Bob\",     type_licence = usethis::use_proprietary_license   ) }) #> ✔ Setting active project to '/tmp/Rtmpnpj01j/file173e12871d7d' #> ✔ Creating 'R/' #> ✔ Writing a sentinel file '.here' #> • Build robust paths within your project via `here::here()` #> • Learn more at <https://here.r-lib.org> #> ✔ Setting active project to '<no active project>' #> ✔ Setting active project to '/tmp/Rtmpnpj01j/file173e12871d7d' #> ✔ Writing 'LICENSE' #> ✔ Writing 'NEWS.md' #> ✔ Setting active project to '<no active project>' #> Kit project created"},{"path":"https://thinkr-open.github.io/lozen/reference/add_labels.html","id":null,"dir":"Reference","previous_headings":"","what":"Add labels to project — add_labels","title":"Add labels to project — add_labels","text":"Add labels project","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_labels.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add labels to project — add_labels","text":"","code":"add_labels(project_id, lg = \"fr\")"},{"path":"https://thinkr-open.github.io/lozen/reference/add_labels.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add labels to project — add_labels","text":"project_id project_id lg default, fr get labels french. Use en english","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_labels.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add labels to project — add_labels","text":"Table added labels. Side effect: labels added GitLab.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_labels.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add labels to project — add_labels","text":"","code":"if (FALSE) { add_labels(   project_id = project_id ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Wiki — add_wikis","title":"Add Wiki — add_wikis","text":"Add Wiki","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Wiki — add_wikis","text":"","code":"add_wikis(   project_id,   project_name,   group_url,   group = basename(group_url),   type = c(\"home\", \"cr\", \"keys\") )"},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Wiki — add_wikis","text":"project_id project_id project_name project_name group_url group_url group group type type","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Wiki — add_wikis","text":"Tibble wikis GitLab infos.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add Wiki — add_wikis","text":"Types: home: Home Page cr: Comptes-rendus keys: Key dates project","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Wiki — add_wikis","text":"","code":"if (FALSE) { add_wikis(   project_id = project_id,   project_name = project_name,   group_url = group_url,   group = basename(group_url) ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis_github.html","id":null,"dir":"Reference","previous_headings":"","what":"add_wikis_github — add_wikis_github","title":"add_wikis_github — add_wikis_github","text":"add_wikis_github","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add_wikis_github — add_wikis_github","text":"","code":"add_wikis_github(owner, repo, type = c(\"home\", \"cr\", \"keys\", \"weekly\"))"},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add_wikis_github — add_wikis_github","text":"owner Owner repository repo Repository name type Wiki type add","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/add_wikis_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add_wikis_github — add_wikis_github","text":"","code":"if (FALSE) { add_wikis_github(   owner = \"ghowner\",   repo = \"areponame\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/amend_yaml.html","id":null,"dir":"Reference","previous_headings":"","what":"Amend yaml — amend_yaml","title":"Amend yaml — amend_yaml","text":"combien, needed, existing .gitlab-ci.yml file","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/amend_yaml.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Amend yaml — amend_yaml","text":"","code":"amend_yaml(path_to_yaml, connect_ci_list)"},{"path":"https://thinkr-open.github.io/lozen/reference/amend_yaml.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Amend yaml — amend_yaml","text":"path_to_yaml pat .gtilab-ci.yml file connect_ci_list list, output create_deploy_ci_stage","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/amend_yaml.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Amend yaml — amend_yaml","text":"","code":"# amend_yaml()"},{"path":"https://thinkr-open.github.io/lozen/reference/bs4_book_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Render bookdown bs4book — bs4_book_template","title":"Render bookdown bs4book — bs4_book_template","text":"Render bookdown bs4book","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/bs4_book_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render bookdown bs4book — bs4_book_template","text":"","code":"bs4_book_template(   theme = bs4_book_theme(),   repo = NULL,   ...,   lib_dir = \"libs\",   pandoc_args = NULL,   extra_dependencies = NULL,   template = \"default\",   split_bib = FALSE,   footnotes_inline = TRUE )"},{"path":"https://thinkr-open.github.io/lozen/reference/bs4_book_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render bookdown bs4book — bs4_book_template","text":"theme named list bslib::bs_theme() object. default, bs4_book_theme(), resets base font size 1rem make reading easier uses primary colour greater contrast background. repo Either link repository book hosted, used generate view source edit buttons list repository base link, default branch, subdir icon (see \"Specifying repository\" https://bookdown.org/yihui/bookdown/html.html#bootstrap4-style). lib_dir, pandoc_args, extra_dependencies, split_bib, ... Passed rmarkdown::html_document(). template Pandoc template use rendering. Pass \"default\" use bookdown default template; pass path use custom template. default template sufficient use cases. advanced user , case want develop custom template, highly recommend start default template: https://github.com/rstudio/bookdown/blob/master/inst/templates/bs4_book.html. Otherwise, feature may work anymore. footnotes_inline default, footnotes set inline shown hover. Set FALSE keep footnotes bottom page links.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/bs4_book_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render bookdown bs4book — bs4_book_template","text":"pagedown template","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/build_pkgdown_with_reports.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a pkgdown with extra reports tab for testdown and coverage output — build_pkgdown_with_reports","title":"Build a pkgdown with extra reports tab for testdown and coverage output — build_pkgdown_with_reports","text":"Build pkgdown extra reports tab testdown coverage output","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/build_pkgdown_with_reports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a pkgdown with extra reports tab for testdown and coverage output — build_pkgdown_with_reports","text":"","code":"build_pkgdown_with_reports(   pkg = \".\",   pkgdown_path = \"public\",   assets_path = \"pkgdown/assets\",   reports = c(\"coverage\", \"testdown\", \"gitdown\"),   git_branch_ref = \"main\",   overwrite_assets = TRUE )"},{"path":"https://thinkr-open.github.io/lozen/reference/build_pkgdown_with_reports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a pkgdown with extra reports tab for testdown and coverage output — build_pkgdown_with_reports","text":"pkg character path package build reported pkgdown_path character relative path inside package store final site assets_path character relative path within package store reports outputs reports character vector reports produced, can subset c(\"testdown\",\"coverage\") git_branch_ref character vector git branch use, 'main' default overwrite_assets logical Whether assets directory store reports overwritten","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/build_pkgdown_with_reports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a pkgdown with extra reports tab for testdown and coverage output — build_pkgdown_with_reports","text":"None Generate pkgdown test coverage reports","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/build_pkgdown_with_reports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a pkgdown with extra reports tab for testdown and coverage output — build_pkgdown_with_reports","text":"","code":"if (FALSE) { # build_pkgdown_with_reports( #    pkg = \".\", #    pkgdown_path = \"public\", #    assets_path = \"pkgdown/assets\", #    reports = c(\"testdown\",\"coverage\") }"},{"path":"https://thinkr-open.github.io/lozen/reference/check_if_yaml_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if yaml file exist — check_if_yaml_exists","title":"Check if yaml file exist — check_if_yaml_exists","text":"Check yaml file already exist ask permission overwriting","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/check_if_yaml_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if yaml file exist — check_if_yaml_exists","text":"","code":"check_if_yaml_exists(dir = \".\", file_name = \".gitlab-ci.yml\", append = TRUE)"},{"path":"https://thinkr-open.github.io/lozen/reference/check_if_yaml_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if yaml file exist — check_if_yaml_exists","text":"dir directory scan file_name filename use .gitlab-ci.yml append boolean allow append stage existing ci file. TRUE default","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/check_if_yaml_exists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check if yaml file exist — check_if_yaml_exists","text":"","code":"# check_if_yaml_exists()"},{"path":"https://thinkr-open.github.io/lozen/reference/clean_image.html","id":null,"dir":"Reference","previous_headings":"","what":"clean image — clean_image","title":"clean image — clean_image","text":"Manage image yaml","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/clean_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"clean image — clean_image","text":"","code":"clean_image(ci)"},{"path":"https://thinkr-open.github.io/lozen/reference/clean_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"clean image — clean_image","text":"ci List CI parameters, imported yaml file","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/clean_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"clean image — clean_image","text":"list list CI parameters unique docker image","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/clean_image.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"clean image — clean_image","text":"","code":"# pkgdown yml full <- yaml::read_yaml(file = system.file(\"yaml\", \".gitlab-ci-pkg.yml\", package = \"lozen\"))  # shiny yaml connect <- yaml::read_yaml(file = system.file(\"yaml\", \".gitlab-ci-shiny.yml\", package = \"lozen\"))  ci_list <- combine_ci(ci1 = full, ci2 = connect) ci_list <- clean_image(ci_list)"},{"path":"https://thinkr-open.github.io/lozen/reference/clone_locally.html","id":null,"dir":"Reference","previous_headings":"","what":"Clone project locally — clone_locally","title":"Clone project locally — clone_locally","text":"Clone project locally","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/clone_locally.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clone project locally — clone_locally","text":"","code":"clone_locally(project_name, group_url, full_url, project_path, open = TRUE)"},{"path":"https://thinkr-open.github.io/lozen/reference/clone_locally.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clone project locally — clone_locally","text":"project_name project_name group_url group_url full_url Full url repository. Superseeds group_url project_name used. project_path project_path open Logical. Whether open RStudio project.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/clone_locally.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clone project locally — clone_locally","text":"project_path. Side effect: clone project.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/clone_locally.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clone project locally — clone_locally","text":"","code":"if (FALSE) { project_path <- clone_locally(   project_name = the_project[[\"name\"]],   group_url = group_url,   open = TRUE ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/combine_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"combine CI — combine_ci","title":"combine CI — combine_ci","text":"Merge two yaml list combined list","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/combine_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"combine CI — combine_ci","text":"","code":"combine_ci(ci1, ci2)"},{"path":"https://thinkr-open.github.io/lozen/reference/combine_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"combine CI — combine_ci","text":"ci1 List initial CI parameters ci2 List CI parameters append initial CI","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/combine_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"combine CI — combine_ci","text":"list list combined CI parameters","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/combine_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"combine CI — combine_ci","text":"","code":"# pkgdown yml full <- yaml::read_yaml(file = system.file(\"yaml\", \".gitlab-ci-pkg.yml\", package = \"lozen\"))  # shiny yaml connect <- yaml::read_yaml(file = system.file(\"yaml\", \".gitlab-ci-shiny.yml\", package = \"lozen\"))  ci_list <- combine_ci(ci1 = full, ci2 = connect)"},{"path":"https://thinkr-open.github.io/lozen/reference/create_book_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform project as book with lozen template — create_book_project","title":"Transform project as book with lozen template — create_book_project","text":"Transform project book lozen template","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_book_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform project as book with lozen template — create_book_project","text":"","code":"create_book_project(   project_path,   bookdown_path = system.file(\"lozendown\", package = \"lozen\"),   css = NULL,   footer = NULL,   logo = NULL,   index = NULL,   output_yml = NULL )"},{"path":"https://thinkr-open.github.io/lozen/reference/create_book_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform project as book with lozen template — create_book_project","text":"project_path project_path bookdown_path path bookdown css path(s) css copy footer path footer copy logo path logo copy index path index copy output_yml path output_yml copy","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_book_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform project as book with lozen template — create_book_project","text":"Side Effect: Transform project book","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_book_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform project as book with lozen template — create_book_project","text":"","code":"withr::with_tempdir({   project_path <- getwd()   create_book_project(project_path) }) #> [-] 5 package(s) removed: dplyr, ggplot2, pagedown, tidyr, pagedown. #> book created #> You need to follow 'dev_history_book.Rmd' after that for the CI to create the pdf_book. #> [1] \"/tmp/Rtmpnpj01j/file173e407f4d1d\""},{"path":"https://thinkr-open.github.io/lozen/reference/create_deploy_ci_stage.html","id":null,"dir":"Reference","previous_headings":"","what":"Title — create_deploy_ci_stage","title":"Title — create_deploy_ci_stage","text":"Title","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_deploy_ci_stage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Title — create_deploy_ci_stage","text":"","code":"create_deploy_ci_stage(   image,   deploy_function,   stage_name = deploy_function,   ... )"},{"path":"https://thinkr-open.github.io/lozen/reference/create_deploy_ci_stage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Title — create_deploy_ci_stage","text":"image image#' deploy_function deploy_function stage_name stage_name ... dots used","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_deploy_ci_stage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Title — create_deploy_ci_stage","text":"","code":"create_deploy_ci_stage(   image = \"rocker/verse\",   deploy_function = \"deploy_connect_shiny\" ) #> $image #> [1] \"rocker/verse\" #>  #> $variables #> $variables$GIT_DEPTH #> [1] 10 #>  #> $variables$REPO_NAME #> [1] \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\" #>  #> $variables$R_LIBS_USER #> [1] \"ci/lib\" #>  #>  #> $cache #> $cache$key #> [1] \"global-cache\" #>  #> $cache$paths #> $cache$paths[[1]] #> [1] \"${R_LIBS_USER}\" #>  #>  #>  #> $stages #> $stages[[1]] #> [1] \"deploy_connect_shiny\" #>  #>  #> $deploying #> $deploying$stage #> [1] \"deploy_connect_shiny\" #>  #> $deploying$script #> [1] \"echo \\\"Library path for packages :\\\" $R_LIBS_USER\"                                                                                                                                                                                                                                                                   #> [2] \"mkdir -p $R_LIBS_USER\"                                                                                                                                                                                                                                                                                               #> [3] \"Rscript -e 'install.packages(c(\\\"git2r\\\"));install.packages(\\\"gitlabr\\\", repos = c(\\\"https://thinkr-open.r-universe.dev\\\", \\\"https://cloud.r-project.org\\\"))'\"                                                                                                                                                       #> [4] \"Rscript -e 'install.packages(\\\"lozen\\\", repos = c(\\\"https://thinkr-open.r-universe.dev\\\", \\\"https://cran.rstudio.com\\\"))'\"                                                                                                                                                                                           #> [5] \"Rscript -e 'remotes::install_local(dependencies = TRUE)'\"                                                                                                                                                                                                                                                            #> [6] \"Rscript -e 'options(rsconnect.packrat = TRUE); lozen::deploy_connect_shiny(forceUpdate=TRUE, connect_url = Sys.getenv(\\\"CONNECT_URL\\\"),connect_user = Sys.getenv(\\\"CONNECT_USER\\\"),connect_api_token = Sys.getenv(\\\"CONNECT_TOKEN\\\"),app_name = Sys.getenv(\\\"APP_NAME\\\", unset = Sys.getenv(\\\"CI_PROJECT_NAME\\\")))'\" #>  #>"},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new project in a group — create_group_project","title":"Create new project in a group — create_group_project","text":"Create new project group","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new project in a group — create_group_project","text":"","code":"create_group_project(   project_name,   namespace_id,   gitlab_con = \"default\",   default_branch = \"main\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new project in a group — create_group_project","text":"project_name name project create namespace_id id group add project gitlab_con Connection credentials GitLab. Better use set_gitlab_connection() function default_branch Default branch project created. Default \"main\".","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new project in a group — create_group_project","text":"project_id. Side effect: Create project GitLab exists.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new project in a group — create_group_project","text":"","code":"if (FALSE) { create_group_project(   project_name = project_name,   namespace_id = namespace_id,   default_branch = \"main\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Create new project on GitHub — create_group_project_github","title":"Create new project on GitHub — create_group_project_github","text":"Create new project GitHub","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create new project on GitHub — create_group_project_github","text":"","code":"create_group_project_github(repo, owner)"},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create new project on GitHub — create_group_project_github","text":"repo name project create owner Owner repo","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create new project on GitHub — create_group_project_github","text":"project_id. Side effect: Create project GitHub exists.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_group_project_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create new project on GitHub — create_group_project_github","text":"","code":"if (FALSE) { create_group_project_github(   repo = \"areponame\",   owner = \"ghowner\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients.html","id":null,"dir":"Reference","previous_headings":"","what":"Create issue content for client — create_issue_content_clients","title":"Create issue content for client — create_issue_content_clients","text":"Generate text client first issue gitlab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create issue content for client — create_issue_content_clients","text":"","code":"create_issue_content_clients(project_name, group_url)"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create issue content for client — create_issue_content_clients","text":"project_name name project group_url url gitlab website","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create issue content for client — create_issue_content_clients","text":"character vector issue content","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create issue content for client — create_issue_content_clients","text":"","code":"if (FALSE) { create_issue_content_clients(   project_name = \"<get_your_project_name>\",   group_url = \"<group_url_repo>\" # should looks like \"https://gitlab.com/cervan.girard/\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Create issue content for client — create_issue_content_clients_github","title":"Create issue content for client — create_issue_content_clients_github","text":"Generate text client first issue github","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create issue content for client — create_issue_content_clients_github","text":"","code":"create_issue_content_clients_github(owner, repo)"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create issue content for client — create_issue_content_clients_github","text":"owner owner project repo name project","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create issue content for client — create_issue_content_clients_github","text":"character vector issue content","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_clients_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create issue content for client — create_issue_content_clients_github","text":"","code":"if (FALSE) { create_issue_content_clients_github(   owner = \"owner\",   repo = \"repo\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev.html","id":null,"dir":"Reference","previous_headings":"","what":"Create issue content for devs — create_issue_content_dev","title":"Create issue content for devs — create_issue_content_dev","text":"Generate text devs first issue gitlab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create issue content for devs — create_issue_content_dev","text":"","code":"create_issue_content_dev(project_id, group_url, project_name)"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create issue content for devs — create_issue_content_dev","text":"project_id project_id group_url group_url project_name project_name","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create issue content for devs — create_issue_content_dev","text":"character vector issue content","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create issue content for devs — create_issue_content_dev","text":"","code":"if (FALSE) { create_issue_content_dev(   project_id = \"<get_your_id_project>\",   project_name = \"<get_your_project_name>\",   group_url = \"<group_url_repo>\" # should looks like \"https://gitlab.com/cervan.girard/\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Create issue content for dev — create_issue_content_dev_github","title":"Create issue content for dev — create_issue_content_dev_github","text":"Generate text dev first issue github","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create issue content for dev — create_issue_content_dev_github","text":"","code":"create_issue_content_dev_github(owner, repo)"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create issue content for dev — create_issue_content_dev_github","text":"owner owner project repo name project","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create issue content for dev — create_issue_content_dev_github","text":"character vector issue content","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_dev_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create issue content for dev — create_issue_content_dev_github","text":"","code":"if (FALSE) { create_issue_content_dev_github(   owner = \"owner\",   repo = \"repo\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_kickoff.html","id":null,"dir":"Reference","previous_headings":"","what":"Create issue content for kickoff — create_issue_content_kickoff","title":"Create issue content for kickoff — create_issue_content_kickoff","text":"Generate text kickoff issue","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_kickoff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create issue content for kickoff — create_issue_content_kickoff","text":"","code":"create_issue_content_kickoff()"},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_kickoff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create issue content for kickoff — create_issue_content_kickoff","text":"character vector issue content","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_issue_content_kickoff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create issue content for kickoff — create_issue_content_kickoff","text":"","code":"create_issue_content_kickoff() #>  [1] \"## Validation (Pour les clients)\"                                                                                                                                                                                         #>  [2] \"\"                                                                                                                                                                                                                         #>  [3] \"- [ ] Je comprend qu'un ticket est divisé en 3 parties: le titre (besoin), les critères de validation et une partie technique\"                                                                                            #>  [4] \"- [ ] Je comprend que la partie validation est celle qui me concerne en tant client et que toutes les informations pour valider le ticket y sont présentes\"                                                               #>  [5] \"- [ ] J'ai été informé que la partie validation est auto-portante: toutes les informations permettant de valider seront présentes et complétée avec des captures d'écran ou url à explorer\"                               #>  [6] \"- [ ] Je comprend que la partie technique ne concernent que les personnes qui développent\"                                                                                                                                #>  [7] \"- [ ] Je comprend que pour valider ce ticket, je dois ajouter un commentaire ci-dessous pour indiquer que je valide la totalité du ticket et qu'il peut être fermé. Le cas échéant, j'indique les corrections à apporter\" #>  [8] \"\"                                                                                                                                                                                                                         #>  [9] \"## Technique (Pour les devs)\"                                                                                                                                                                                             #> [10] \"\"                                                                                                                                                                                                                         #> [11] \"+ [ ] Ajouter un lien vers le site {pkgdown} du projet dans le critère 3 (auto-portant)\"                                                                                                                                  #> [12] \"+ [ ] Mettre ce ticket dans la colonne validation\"                                                                                                                                                                        #> [13] \"+ [ ] Faire en sorte que ce ticket soit validé en KickOff avec le client\""},{"path":"https://thinkr-open.github.io/lozen/reference/create_production.html","id":null,"dir":"Reference","previous_headings":"","what":"Create branch production from master — create_production","title":"Create branch production from master — create_production","text":"Create branch production master","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_production.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create branch production from master — create_production","text":"","code":"create_production(project_path)"},{"path":"https://thinkr-open.github.io/lozen/reference/create_production.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create branch production from master — create_production","text":"project_path project_path","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_production.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create branch production from master — create_production","text":"Side effect: New branch server","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_production.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create branch production from master — create_production","text":"","code":"if (FALSE) { create_production(   project_path = project_path ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/create_r_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a R project with full content skeleton — create_r_project","title":"Create a R project with full content skeleton — create_r_project","text":"Create R project full content skeleton","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_r_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a R project with full content skeleton — create_r_project","text":"","code":"create_r_project(   project_path,   type = c(\"package\", \"golem\", \"book\"),   name_licence,   type_licence )"},{"path":"https://thinkr-open.github.io/lozen/reference/create_r_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a R project with full content skeleton — create_r_project","text":"project_path project_path type type name_licence name licence type_licence type licence, function like usethis::use_mit_licence","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_r_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a R project with full content skeleton — create_r_project","text":"Side Effect: Transform project package book: package, golem book skeleton git necessary files pkgdown book template GitLab CI","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/create_r_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a R project with full content skeleton — create_r_project","text":"","code":"if (FALSE) { # path to your local project project_path <- tempfile(\"my.local.project\")  ### R package skeleton create_r_project(   project_path = project_path,   type = c(\"package\"),   name_licence = \"Bob\",   type_licence = usethis::use_proprietary_license )  ### Shiny app create_r_project(   project_path = project_path,   type = c(\"golem\"),   name_licence = \"Bob\",   type_licence = usethis::use_proprietary_license )  ### Bookdown create_r_project(   project_path = project_path,   type = c(\"book\"),   name_licence = \"Bob\",   type_licence = usethis::use_proprietary_license ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_bookdown.html","id":null,"dir":"Reference","previous_headings":"","what":"deploy_connect_bookdown — deploy_connect_bookdown","title":"deploy_connect_bookdown — deploy_connect_bookdown","text":"using , please follow steps :","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_bookdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deploy_connect_bookdown — deploy_connect_bookdown","text":"","code":"deploy_connect_bookdown(   connect_url = Sys.getenv(\"CONNECT_URL\"),   connect_user = Sys.getenv(\"CONNECT_USER\"),   connect_api_token = Sys.getenv(\"CONNECT_TOKEN\"),   app_name = NULL,   deploy_dir = file.path(getwd(), \"_book\"),   connect_name = Sys.getenv(\"CONNECT_NAME\", unset = \"connect\"),   file_to_ignore_regex =     \".Rprofile$|^.Renviron$|renv/|rstudio_.*/|deliverables/|dev/|data-raw/|dockerfiles/\",   forceUpdate = FALSE,   lint = FALSE,   ... )"},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_bookdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deploy_connect_bookdown — deploy_connect_bookdown","text":"connect_url URL Connect server connect_user User name use connect Connect server connect_api_token API token use connect Connect server app_name Name app deploy deploy_dir Directory deploy connect_name Name Connect server file_to_ignore_regex Regex use ignore files forceUpdate TRUE, update previously-deployed app without asking. FALSE, ask update. unset, defaults value getOption(\"rsconnect.force.update.apps\", FALSE). lint Lint project initiating deployment, identify potentially problematic code? ... arguments pass rsconnect::deployApp","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_bookdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"deploy_connect_bookdown — deploy_connect_bookdown","text":"used side effects","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_bookdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"deploy_connect_bookdown — deploy_connect_bookdown","text":"Ask Mission Lead Dev deployment token Connect, one need use. Add environment variables personal \".Renviron\" manually deploy Connect: Add CONNECT_USER username. Add CONNECT_TOKEN token. Add CONNECT_URL connect url TODO","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_bookdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"deploy_connect_bookdown — deploy_connect_bookdown","text":"","code":"if (FALSE) { if (   Sys.getenv(\"CONNECT_URL\") != \"\" &     Sys.getenv(\"CONNECT_USER\") != \"\" &     Sys.getenv(\"CONNECT_TOKEN\") != \"\" ) {   project_name <- \"lozen-example-bookdown\"    tmpdir <- tempfile(pattern = \"book-\")   dir.create(tmpdir)   project_path <- file.path(tmpdir, project_name)    bookdown::create_bs4_book(path = project_path)    bookdown::render_book(input = project_path)    deploy_connect_bookdown(     app_name = project_name,     deploy_dir = file.path(project_path, \"_book\")   ) } }"},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_pkgdown.html","id":null,"dir":"Reference","previous_headings":"","what":"deploy_connect_pkgdown — deploy_connect_pkgdown","title":"deploy_connect_pkgdown — deploy_connect_pkgdown","text":"using , please follow steps :","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_pkgdown.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deploy_connect_pkgdown — deploy_connect_pkgdown","text":"","code":"deploy_connect_pkgdown(   connect_url = Sys.getenv(\"CONNECT_URL\"),   connect_user = Sys.getenv(\"CONNECT_USER\"),   connect_api_token = Sys.getenv(\"CONNECT_TOKEN\"),   app_name = NULL,   deploy_dir = c(file.path(getwd(), \"public\"), file.path(getwd(), \"docs\"),     file.path(getwd(), \"inst/site/\"), file.path(getwd(), \".\")),   connect_name = Sys.getenv(\"CONNECT_NAME\", unset = \"connect\"),   file_to_ignore_regex =     \".Rprofile$|^.Renviron$|renv/|rstudio_.*/|deliverables/|dev/|data-raw/|dockerfiles/\",   forceUpdate = FALSE,   lint = FALSE,   app_primary_doc = \"index.html\",   ... )"},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_pkgdown.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deploy_connect_pkgdown — deploy_connect_pkgdown","text":"connect_url URL Connect server connect_user User name use connect Connect server connect_api_token API token use connect Connect server app_name Name app deploy deploy_dir vectoro Directory path deploy, first available used. default c(file.path(getwd(), \"public\"), file.path(getwd(), \"docs\"), file.path(getwd(), \"inst/site/\"), file.path(getwd(), \".\")   ) connect_name Name Connect server file_to_ignore_regex Regex use ignore files forceUpdate TRUE, update previously-deployed app without asking. FALSE, ask update. unset, defaults value getOption(\"rsconnect.force.update.apps\", FALSE). lint Lint project initiating deployment, identify potentially problematic code? app_primary_doc application contains one document, parameter indicates primary one, path relative appDir. Can NULL, case primary document inferred contents deployed. ... arguments pass rsconnect::deployApp","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_pkgdown.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"deploy_connect_pkgdown — deploy_connect_pkgdown","text":"used side effects","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_pkgdown.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"deploy_connect_pkgdown — deploy_connect_pkgdown","text":"Ask Mission Lead Dev deployment token Connect, one need use. Add environment variables personal \".Renviron\" manually deploy Connect: Add CONNECT_USER username. Add CONNECT_TOKEN token. Add CONNECT_URL connect url TODO","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_pkgdown.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"deploy_connect_pkgdown — deploy_connect_pkgdown","text":"","code":"if (FALSE) { # We assume that you are working on a R package # if not done yet, create your pkgdown pkgdown::build_site(   pkg = \".\",   override = list(destination = \"inst/site/\") ) if (Sys.getenv(\"CONNECT_URL\") != \"\" &   Sys.getenv(\"CONNECT_USER\") != \"\" &   Sys.getenv(\"CONNECT_TOKEN\") != \"\") {   deploy_connect_pkgdown(     app_name = \"titi\",     deploy_dir = file.path(project_path, \"inst/site/\")   ) } }"},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"deploy_connect — deploy_connect_shiny","title":"deploy_connect — deploy_connect_shiny","text":"using , please follow steps :","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"deploy_connect — deploy_connect_shiny","text":"","code":"deploy_connect_shiny(   connect_url = Sys.getenv(\"CONNECT_URL\"),   connect_user = Sys.getenv(\"CONNECT_USER\"),   connect_api_token = Sys.getenv(\"CONNECT_TOKEN\"),   app_name = NULL,   deploy_dir = getwd(),   connect_name = Sys.getenv(\"CONNECT_NAME\", unset = \"connect\"),   file_to_ignore_regex =     \".Rprofile$|^.Renviron$|renv/|rstudio_.*/|deliverables/|dev/|data-raw/|dockerfiles/\",   forceUpdate = FALSE,   lint = FALSE,   ... )"},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"deploy_connect — deploy_connect_shiny","text":"connect_url URL Connect server connect_user User name use connect Connect server connect_api_token API token use connect Connect server app_name Name app deploy deploy_dir Directory deploy connect_name Name Connect server file_to_ignore_regex Regex use ignore files forceUpdate TRUE, update previously-deployed app without asking. FALSE, ask update. unset, defaults value getOption(\"rsconnect.force.update.apps\", FALSE). lint Lint project initiating deployment, identify potentially problematic code? ... arguments pass rsconnect::deployApp","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_shiny.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"deploy_connect — deploy_connect_shiny","text":"used side effects","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_shiny.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"deploy_connect — deploy_connect_shiny","text":"Ask Mission Lead Dev deployment token Connect, one need use. Add environment variables personal \".Renviron\" manually deploy Connect: Add CONNECT_USER username. Add CONNECT_TOKEN token. Add CONNECT_URL connect url TODO","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/deploy_connect_shiny.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"deploy_connect — deploy_connect_shiny","text":"","code":"if (FALSE) { deploy_connect_shiny(   connect_url = Sys.getenv(\"CONNECT_URL\"),   connect_user = Sys.getenv(\"CONNECT_USER\"),   connect_api_token = Sys.getenv(\"CONNECT_TOKEN\"),   app_name = \"app_test\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/fetch_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"fetch_connect — fetch_connect","title":"fetch_connect — fetch_connect","text":"Fetch deployment status Connect given app","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/fetch_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fetch_connect — fetch_connect","text":"","code":"fetch_connect(   app_name,   connect_api_token = Sys.getenv(\"CONNECT_TOKEN\"),   connect_url = Sys.getenv(\"CONNECT_URL\") )"},{"path":"https://thinkr-open.github.io/lozen/reference/fetch_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fetch_connect — fetch_connect","text":"app_name character Name app fetched connect_api_token character API token enable access Connect connect_url character URL Connect server","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/fetch_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fetch_connect — fetch_connect","text":"list list containing HTTP code status guid app","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/fetch_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"fetch_connect — fetch_connect","text":"","code":"if (FALSE) { fetch_connect(app_name = \"my_app_name\") }"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_add_template_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the template for standard issue on gitlab — gh_add_template_issue","title":"Create the template for standard issue on gitlab — gh_add_template_issue","text":"Create template standard issue gitlab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_add_template_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the template for standard issue on gitlab — gh_add_template_issue","text":"","code":"gh_add_template_issue(   project_path = \".\",   language = c(\"fr\", \"en\"),   type = c(\"full\", \"light\") )"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_add_template_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the template for standard issue on gitlab — gh_add_template_issue","text":"project_path Path project language Language. one 'fr' 'en' type Verbosity comments template. 'full' 'light'.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_add_template_issue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the template for standard issue on gitlab — gh_add_template_issue","text":"Side effect: create template","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_add_template_issue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the template for standard issue on gitlab — gh_add_template_issue","text":"","code":"# Try with a temp project ## Create temp dir and file project_path <- tempfile(\"myproject\") dir.create(project_path)  ## Add the full template in french gh_add_template_issue(project_path, language = \"fr\", type = \"full\") #> Issue template added, find it when creating a new issue on the graphical interface  ## Add the full template in english gh_add_template_issue(project_path, language = \"en\", type = \"full\") #> Issue template added, find it when creating a new issue on the graphical interface  ## Add the light template in french gh_add_template_issue(project_path, language = \"fr\", type = \"light\") #> Issue template added, find it when creating a new issue on the graphical interface  ## Add the light template in english gh_add_template_issue(project_path, language = \"en\", type = \"light\") #> Issue template added, find it when creating a new issue on the graphical interface  # suppress tmp folder unlink(project_path, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a weekly issues summary for GitHub — gh_create_weekly","title":"Create a weekly issues summary for GitHub — gh_create_weekly","text":"Create weekly issues summary GitHub","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a weekly issues summary for GitHub — gh_create_weekly","text":"","code":"gh_create_weekly(   date_min = Sys.Date() - 7,   date_max = Sys.Date(),   user = \"thinkr-open\",   repo = \"fusen\",   verbose = FALSE,   board_url )"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a weekly issues summary for GitHub — gh_create_weekly","text":"date_min Minimal date look issues date_max Maximal date look issues user username company name shown GitHub repo GitHub repository verbose Logical. Whether return output console . board_url url GitHub board. using \"classic\" board, deprecated GitHub, may want use url: glue(\"/repos/{user}/{repo}/projects\")","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a weekly issues summary for GitHub — gh_create_weekly","text":"Weekly copy-paste Wiki tibble","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a weekly issues summary for GitHub — gh_create_weekly","text":"","code":"if (FALSE) { if (Sys.getenv(\"GITHUB_PAT\") != \"\") {   user <- \"ThinkR-open\"   repo <- \"example-weekly\"   weekly <- gh_create_weekly(     date_min = \"2022-06-30\",     date_max = \"2022-06-30\",     user = user,     repo = repo,     board_url = glue::glue(\"/repos/{user}/{repo}/projects\")   ) } } # Copier dans le presse papier pour copier directement # clipr::write_clip(weekly$weekly_info)"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_new_projects_board.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a weekly issues summary for GitHub (new board) — gh_create_weekly_new_projects_board","title":"Create a weekly issues summary for GitHub (new board) — gh_create_weekly_new_projects_board","text":"Create weekly issues summary GitHub (new board)","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_new_projects_board.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a weekly issues summary for GitHub (new board) — gh_create_weekly_new_projects_board","text":"","code":"gh_create_weekly_new_projects_board(   date_min,   date_max,   user,   repo,   board_url,   github_token = Sys.getenv(\"GITHUB_PAT\"),   verbose = FALSE )"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_new_projects_board.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a weekly issues summary for GitHub (new board) — gh_create_weekly_new_projects_board","text":"date_min Minimal date look issues date_max Maximal date look issues user username company name shown GitHub repo GitHub repository board_url url GitHub board. github_token token access graphQL API verbose Logical. Whether return output console .","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_new_projects_board.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a weekly issues summary for GitHub (new board) — gh_create_weekly_new_projects_board","text":"Weekly copy-paste Wiki tibble","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_new_projects_board.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a weekly issues summary for GitHub (new board) — gh_create_weekly_new_projects_board","text":"","code":"if (FALSE) { board_url <- \"https://github.com/orgs/ThinkR-open/projects/4/\" date_min <- \"2022-06-30\" date_max <- \"2022-06-30\" user <- \"ThinkR-open\" repo <- \"example-weekly\"  if (Sys.getenv(\"GITHUB_PAT\") != \"\") {   weekly <- gh_create_weekly_new_projects_board(     date_min = date_min,     date_max = date_max,     user = user,     repo = repo,     board_url = board_url,     github_token = Sys.getenv(\"GITHUB_PAT\"),     verbose = FALSE   ) } } # Copier dans le presse papier pour copier directement # clipr::write_clip(weekly$weekly_info)"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_old_and_new_boards.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a weekly issues summary for GitHub — gh_create_weekly_old_and_new_boards","title":"Create a weekly issues summary for GitHub — gh_create_weekly_old_and_new_boards","text":"Create weekly issues summary GitHub","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_old_and_new_boards.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a weekly issues summary for GitHub — gh_create_weekly_old_and_new_boards","text":"","code":"gh_create_weekly_old_and_new_boards(   date_min,   date_max,   user,   repo,   board_url,   new_board = TRUE,   regex_done = \"close|closed|done\",   regex_validation = \"a valider|validation\",   regex_blocked = \"blocked|bloque|bloqu\\\\\\\\u00e9\",   regex_inprogress =     \"in progress|en cours|review|revision|r\\\\\\\\u00e9vision|r\\\\\\\\u00e9-validation\",   regex_ready = \"ready|pret|pr\\\\\\\\u00eat\",   github_token = Sys.getenv(\"GITHUB_PAT\"),   verbose = FALSE )"},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_old_and_new_boards.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a weekly issues summary for GitHub — gh_create_weekly_old_and_new_boards","text":"date_min Minimal date look issues date_max Maximal date look issues user username company name shown GitHub repo GitHub repository board_url url GitHub board. using \"classic\" board, deprecated GitHub, may want use url: glue(\"/repos/{user}/{repo}/projects\") otherwise may want use kind url: \"https://github.com/orgs/myorganization/projects/someprojectnumber/\"  Please mandatory setting new_board = FALSE since board_url can guessed user repo new_board logical. working classic board new board. regex_done Regular expression detect labels issues done developers (potentially awaiting validation clients) regex_validation Regular expression detect labels issues waiting validation regex_blocked Regular expression detect labels issues blocked (potentially awaiting information clients) regex_inprogress Regular expression detect labels issues progress (potentially awaiting review lead dev.) regex_ready Regular expression detect labels issues ready (potentially reorder lead dev.) github_token token access github API (read:project scope required new github board). verbose Logical. Whether return output console .","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_old_and_new_boards.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a weekly issues summary for GitHub — gh_create_weekly_old_and_new_boards","text":"Weekly copy-paste Wiki tibble","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gh_create_weekly_old_and_new_boards.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a weekly issues summary for GitHub — gh_create_weekly_old_and_new_boards","text":"","code":"if (FALSE) { user <- \"ThinkR-open\" repo <- \"example-weekly\" date_min <- \"2022-06-30\" date_max <- \"2022-06-30\" board_url_old <- glue::glue(\"/repos/{user}/{repo}/projects\") board_url_new <- \"https://github.com/orgs/ThinkR-open/projects/4/\"  # old board weekly_old <- gh_create_weekly_old_and_new_boards(   date_min = date_min,   date_max = date_max,   user = user,   repo = repo,   board_url = board_url_old,   new_board = FALSE,   verbose = FALSE ) cat(weekly_old$weekly_info)  # clipr::write_clip(weekly_old$weekly_info)   # new board weekly_new <- gh_create_weekly_old_and_new_boards(   date_min = date_min,   date_max = date_max,   user = user,   repo = repo,   board_url = board_url_new,   github_token = Sys.getenv(\"GITHUB_PAT\"),   new_board = TRUE,   verbose = FALSE ) cat(weekly_new$weekly_info) # clipr::write_clip(weekly_new$weekly_info) }"},{"path":"https://thinkr-open.github.io/lozen/reference/gl_add_template_issue.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the template for standard issue on gitlab — gl_add_template_issue","title":"Create the template for standard issue on gitlab — gl_add_template_issue","text":"Create template standard issue gitlab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_add_template_issue.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the template for standard issue on gitlab — gl_add_template_issue","text":"","code":"gl_add_template_issue(   project_path = \".\",   language = c(\"fr\", \"en\"),   type = c(\"full\", \"light\") )"},{"path":"https://thinkr-open.github.io/lozen/reference/gl_add_template_issue.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the template for standard issue on gitlab — gl_add_template_issue","text":"project_path Path project language Language. one 'fr' 'en' type Verbosity comments template. 'full' 'light'.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_add_template_issue.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create the template for standard issue on gitlab — gl_add_template_issue","text":"Side effect: create template","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_add_template_issue.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create the template for standard issue on gitlab — gl_add_template_issue","text":"","code":"# Try with a temp project ## Create temp dir and file project_path <- tempfile(\"myproject\") dir.create(project_path)  ## Add the template in full french gl_add_template_issue(project_path, language = \"fr\", type = \"full\") #> Issue template added, find it when creating a new issue on the graphical interface  ## Add the template in full english gl_add_template_issue(project_path, language = \"en\", type = \"full\") #> Issue template added, find it when creating a new issue on the graphical interface  ## Add the template in light french gl_add_template_issue(project_path, language = \"fr\", type = \"light\") #> Issue template added, find it when creating a new issue on the graphical interface  ## Add the template in light english gl_add_template_issue(project_path, language = \"en\", type = \"light\") #> Issue template added, find it when creating a new issue on the graphical interface  # Suppress tmp folder unlink(project_path, recursive = TRUE)"},{"path":"https://thinkr-open.github.io/lozen/reference/gl_create_weekly.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Weekly/Daily summary of what happened in your GitLab Board — gl_create_weekly","title":"Create a Weekly/Daily summary of what happened in your GitLab Board — gl_create_weekly","text":"Create Weekly/Daily summary happened GitLab Board","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_create_weekly.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Weekly/Daily summary of what happened in your GitLab Board — gl_create_weekly","text":"","code":"gl_create_weekly(   project_id,   date_min = Sys.Date() - 7,   date_max = Sys.Date(),   language = c(\"fr\", \"en\"),   gitlab_url = Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\"),   private_token = Sys.getenv(\"GITLAB_TOKEN\"),   verbose = FALSE,   regex_done = \"close|closed|done\",   regex_validation = \"a valider|validation\",   regex_blocked = \"blocked|bloque|bloqu\\\\\\\\u00e9\",   regex_inprogress =     \"in progress|en cours|review|revision|r\\\\\\\\u00e9vision|r\\\\\\\\u00e9-validation\",   regex_ready = \"ready|pret|pr\\\\\\\\u00eat\",   daily = FALSE,   date_daily = Sys.Date(),   max_page_opened = 10,   max_page_closed = 5 )  gl_create_daily(...)"},{"path":"https://thinkr-open.github.io/lozen/reference/gl_create_weekly.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Weekly/Daily summary of what happened in your GitLab Board — gl_create_weekly","text":"project_id Id GitLab project date_min Minimal date search . oldest date. date_max Maximal date search . recent date. language Character. Language: 'fr' ou 'en'. gitlab_url URL GitLab Forge private_token private GitLab instance token allowed use \"api\". verbose Logical. Whether show outputs console. regex_done Regular expression detect labels issues done developers (potentially awaiting validation clients) regex_validation Regular expression detect labels issues waiting validation regex_blocked Regular expression detect labels issues blocked (potentially awaiting information clients) regex_inprogress Regular expression detect labels issues progress (potentially awaiting review lead dev.) regex_ready Regular expression detect labels issues ready (potentially reorder lead dev.) daily Logical. Create daily issues summary GitLab date_daily Date search . max_page_opened numeric. maximum number pages retrieve open issues. Defaults 10. max_page_closed numeric. maximum number pages retrieve close issues. Defaults 5. ... Additional arguments","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_create_weekly.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Weekly/Daily summary of what happened in your GitLab Board — gl_create_weekly","text":"Weekly copy-paste Wiki tibble","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_get_milestones_progress.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the progress of the milestones for GitLab — gl_get_milestones_progress","title":"Visualise the progress of the milestones for GitLab — gl_get_milestones_progress","text":"Visualise progress milestones GitLab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_get_milestones_progress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the progress of the milestones for GitLab — gl_get_milestones_progress","text":"","code":"gl_get_milestones_progress(   project_id,   language = c(\"fr\", \"en\"),   gitlab_url = Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\"),   private_token = Sys.getenv(\"GITLAB_TOKEN\"),   color = \"#f15522\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/gl_get_milestones_progress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the progress of the milestones for GitLab — gl_get_milestones_progress","text":"project_id Id GitLab project language Character. Language: 'fr' ou 'en'. gitlab_url URL GitLab Forge private_token private GitLab instance token allowed use \"api\". color defaut, warning color","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_get_milestones_progress.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the progress of the milestones for GitLab — gl_get_milestones_progress","text":"ggplot","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/gl_get_milestones_progress.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the progress of the milestones for GitLab — gl_get_milestones_progress","text":"","code":"if (FALSE) { gl_get_milestones_progress(   project_id = \"<get_your_id_project>\",   private_token = Sys.getenv(\"GITLAB_TOKEN\") ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/graphql_to_tibble.html","id":null,"dir":"Reference","previous_headings":"","what":"Query GraphQL Github API — graphql_to_tibble","title":"Query GraphQL Github API — graphql_to_tibble","text":"function helps retrieving status project board within organization","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/graphql_to_tibble.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Query GraphQL Github API — graphql_to_tibble","text":"","code":"graphql_to_tibble(board_url, github_token = Sys.getenv(\"GITHUB_PAT\"))"},{"path":"https://thinkr-open.github.io/lozen/reference/graphql_to_tibble.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Query GraphQL Github API — graphql_to_tibble","text":"board_url url github project board github_token access token graphql api","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/graphql_to_tibble.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Query GraphQL Github API — graphql_to_tibble","text":"tibble","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/graphql_to_tibble.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Query GraphQL Github API — graphql_to_tibble","text":"","code":"if (FALSE) {  # Example with board hosted in an organization github account board_url_organization <- \"https://github.com/orgs/ThinkR-open/projects/4/\" github_token <- Sys.getenv(\"GITHUB_PAT\")  graphql_to_tibble(   board_url = board_url_organization,   github_token = github_token )   # Example with board hosted in a user github account board_url_user <- \"https://github.com/users/the-thinkr/projects/1\" github_token <- Sys.getenv(\"GITHUB_PAT\")  graphql_to_tibble(   board_url = board_url_user,   github_token = github_token ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/html_to_odt.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert html to odt with template — html_to_odt","title":"Convert html to odt with template — html_to_odt","text":"Convert html odt template","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/html_to_odt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert html to odt with template — html_to_odt","text":"","code":"html_to_odt(input_html = \"_main.html\", output_odt = \"_main.odt\")"},{"path":"https://thinkr-open.github.io/lozen/reference/html_to_odt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert html to odt with template — html_to_odt","text":"input_html Path html file convert output_odt Path odt create","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/html_to_odt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert html to odt with template — html_to_odt","text":"","code":"if (FALSE) { html_to_odt(input_html = \"_main.html\", output_odt = \"_main.odt\") }"},{"path":"https://thinkr-open.github.io/lozen/reference/init_project_with_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Init a new project with everything in one command — init_project_with_all","title":"Init a new project with everything in one command — init_project_with_all","text":"Init new project everything one command","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/init_project_with_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Init a new project with everything in one command — init_project_with_all","text":"","code":"init_project_with_all(   project_name,   project_gitlab_id = NULL,   config_path,   project_path = tempfile(\"clone\"),   ... )"},{"path":"https://thinkr-open.github.io/lozen/reference/init_project_with_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Init a new project with everything in one command — init_project_with_all","text":"project_name name project created project_gitlab_id GitLab ID project already exist Forge config_path path yaml configuration file use options modify default one. See details. project_path path project want keep locally. Default temporary directory. ... parameter existing configuration file like use override config files","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/init_project_with_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Init a new project with everything in one command — init_project_with_all","text":"default, project R package created https://gitlab.com// personal repository. Use configuration file amend default one. configuration file yaml file possible options. specify options combined default ones. Open default one see : file.edit(system.file(\"config_default_thinkr_gitlab.yml\", package = \"lozen\"))","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/init_project_with_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Init a new project with everything in one command — init_project_with_all","text":"","code":"if (interactive()) {   # Default on GitLab.com   init_project_with_all(project_name = \"newprojectpkg\")   # Change default options with your own config file   init_project_with_all(project_name = \"newprojectpkg\", config_path = \"<my-config-path>\")   # Add any extra option to override values of your config file once   init_project_with_all(project_name = \"newprojectpkg\", config_path = \"<my-config-path>\", gitlab_namespace_id = \"000\") }"},{"path":"https://thinkr-open.github.io/lozen/reference/lozen-package.html","id":null,"dir":"Reference","previous_headings":"","what":"lozen: Management tools for missions — lozen-package","title":"lozen: Management tools for missions — lozen-package","text":"Management tools missions (internal external). Includes weekly, GL projects, etc.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/lozen-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"lozen: Management tools for missions — lozen-package","text":"Maintainer: Sébastien Rochette sebastien@thinkr.fr (ORCID) Authors: Margot Brard margot@thinkr.fr (ORCID) Murielle Delmotte murielle@thinkr.fr (ORCID) Swann Floc'hlay swann@thinkr.fr (ORCID) Yohann Mansiaux yohann@thinkr.fr (ORCID) contributors: ThinkR [copyright holder]","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/modify_autoclose_and_coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"modify_autoclose_and_coverage on GitLab — modify_autoclose_and_coverage","title":"modify_autoclose_and_coverage on GitLab — modify_autoclose_and_coverage","text":"modify_autoclose_and_coverage GitLab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/modify_autoclose_and_coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"modify_autoclose_and_coverage on GitLab — modify_autoclose_and_coverage","text":"","code":"modify_autoclose_and_coverage(   project_id,   autoclose = FALSE,   build_coverage_regex = \"Coverage: \\\\d+\\\\.\\\\d+\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/modify_autoclose_and_coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"modify_autoclose_and_coverage on GitLab — modify_autoclose_and_coverage","text":"project_id project_id autoclose Logical. Whether autoclose issues merged main build_coverage_regex Character. regex used retrieve code coverage Ci logs.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/modify_autoclose_and_coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"modify_autoclose_and_coverage on GitLab — modify_autoclose_and_coverage","text":"Side Effect GitLab","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/modify_autoclose_and_coverage.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"modify_autoclose_and_coverage on GitLab — modify_autoclose_and_coverage","text":"","code":"if (FALSE) { modify_autoclose_and_coverage(   project_id = project_id ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/move_issues_from_gitlab_to_github.html","id":null,"dir":"Reference","previous_headings":"","what":"Move Issues from GitLab to GitHub — move_issues_from_gitlab_to_github","title":"Move Issues from GitLab to GitHub — move_issues_from_gitlab_to_github","text":"Move Issues GitLab GitHub","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/move_issues_from_gitlab_to_github.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move Issues from GitLab to GitHub — move_issues_from_gitlab_to_github","text":"","code":"move_issues_from_gitlab_to_github(   gitlab_url = \"https://gitlab.com/\",   github_url = \"https://github.com/\",   gitlab_group,   gitlab_repo,   gitlab_project_id,   github_owner,   github_repo,   gitlab_private_token = Sys.getenv(\"GITLAB_TOKEN\"),   github_token = NULL,   sleep_time = 60,   issue_start_over = 1,   max_page = 10,   force = FALSE )"},{"path":"https://thinkr-open.github.io/lozen/reference/move_issues_from_gitlab_to_github.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move Issues from GitLab to GitHub — move_issues_from_gitlab_to_github","text":"gitlab_url GitLab instance URL github_url GitHub URL, default <github.com> gitlab_group group name. Can sub-group \"group/sub-group\" format gitlab_repo Repo name GitLab gitlab_project_id Repo ID GitLab github_owner Owner project GitHub github_repo Repo name project GitHub. already exists. gitlab_private_token GitLab Token API permissions github_token GitHub token. NULL, search GITHUB_PAT env. variables sleep_time Time second wait set 5 issues. reduce risk banned GitHub. time, Set 60s default. issue_start_over debug. Number issue GitLab start case temporary ban GitHub. max_page Maximum number pages issues retrieve GitLab. force Whether force writing issue GitHub, even issue numbers mismatch GitLab.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/move_issues_from_gitlab_to_github.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move Issues from GitLab to GitHub — move_issues_from_gitlab_to_github","text":"Used side effects. Issues dowloaded copied GitHub","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/move_issues_from_gitlab_to_github.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Move Issues from GitLab to GitHub — move_issues_from_gitlab_to_github","text":"","code":"if (FALSE) { move_issues_from_gitlab_to_github(   gitlab_url = \"https://gitlab.com/\",   github_url = \"https://github.com/\",   gitlab_group = \"thinkr-open\",   gitlab_repo = \"example-weekly\",   gitlab_project_id = 37585948,   github_owner = \"ThinkR-open\",   github_repo = \"example.mirror.issues.gl.gh\",   gitlab_private_token = Sys.getenv(\"GITLAB_TOKEN\"),   github_token = Sys.getenv(\"GITHUB_PAT\"),   sleep_time = 60,   issue_start_over = 1,   max_page = 10,   force = FALSE ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/paged_template.html","id":null,"dir":"Reference","previous_headings":"","what":"Render pagedown html_paged — paged_template","title":"Render pagedown html_paged — paged_template","text":"Render pagedown html_paged","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/paged_template.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render pagedown html_paged — paged_template","text":"","code":"paged_template(   ...,   css = c(\"default-fonts\", \"default-page\", \"default\"),   theme = NULL,   template = pkg_resource(\"html\", \"paged.html\"),   csl = NULL,   front_cover = NULL,   back_cover = NULL )"},{"path":"https://thinkr-open.github.io/lozen/reference/paged_template.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render pagedown html_paged — paged_template","text":"... Arguments passed bookdown::html_document2. css character vector CSS Sass file paths. path contain .css, .sass, .scss extension, assumed built-CSS file. example, default-fonts means filepagedown:::pkg_resource('css', 'default-fonts.css'). see built-CSS files, run pagedown:::list_css(). theme Bootstrap theme. default, Bootstrap used. template path Pandoc template convert Markdown HTML. csl path Citation Style Language (CSL) file used format citations references (see Pandoc documentation). front_cover, back_cover Paths urls image files used front back covers. Theses images available CSS variables (see Details).","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/paged_template.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render pagedown html_paged — paged_template","text":"pagedown template","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://thinkr-open.github.io/lozen/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/project_options.html","id":null,"dir":"Reference","previous_headings":"","what":"Define project status for a user — project_options","title":"Define project status for a user — project_options","text":"Define project status user","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/project_options.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Define project status for a user — project_options","text":"","code":"project_options(project_id, level = \"watch\")"},{"path":"https://thinkr-open.github.io/lozen/reference/project_options.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Define project status for a user — project_options","text":"project_id project_id level notification levels among disabled, participating, watch, global, mention, custom","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/project_options.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Define project status for a user — project_options","text":"Side Effect GitLab, allow reception notifications.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/project_options.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Define project status for a user — project_options","text":"","code":"if (FALSE) { project_options(   project_id,   level = \"watch\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/protect_branches.html","id":null,"dir":"Reference","previous_headings":"","what":"Protect 'main' and 'production' from push on server — protect_branches","title":"Protect 'main' and 'production' from push on server — protect_branches","text":"Protect 'main' 'production' push server","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/protect_branches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Protect 'main' and 'production' from push on server — protect_branches","text":"","code":"protect_branches(project_id, unprotect = FALSE)"},{"path":"https://thinkr-open.github.io/lozen/reference/protect_branches.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Protect 'main' and 'production' from push on server — protect_branches","text":"project_id project_id unprotect Logical. Whether unprotect branches .","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/protect_branches.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Protect 'main' and 'production' from push on server — protect_branches","text":"Side effect: Branches protected push server.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/protect_branches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Protect 'main' and 'production' from push on server — protect_branches","text":"","code":"if (FALSE) { protect_branches(   project_id = project_id ) # unprotect if wanted # protect_branches(project_id, unprotect = TRUE) }"},{"path":"https://thinkr-open.github.io/lozen/reference/push_all_to_branch.html","id":null,"dir":"Reference","previous_headings":"","what":"Push everything on a branch — push_all_to_branch","title":"Push everything on a branch — push_all_to_branch","text":"Push everything branch","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/push_all_to_branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push everything on a branch — push_all_to_branch","text":"","code":"push_all_to_branch(   project_path,   branch = \"main\",   main_branch = \"main\",   message = \"Init repo\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/push_all_to_branch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push everything on a branch — push_all_to_branch","text":"project_path project_path branch branch name. main default main_branch main branch name. main default message commit message","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/push_all_to_branch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Push everything on a branch — push_all_to_branch","text":"Side effect: commit output","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/push_all_to_branch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Push everything on a branch — push_all_to_branch","text":"","code":"if (FALSE) { push_all_to_branch(   project_path = project_path ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/push_main.html","id":null,"dir":"Reference","previous_headings":"","what":"Push main to server — push_main","title":"Push main to server — push_main","text":"Push main server","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/push_main.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push main to server — push_main","text":"","code":"push_main(   project_path,   branch = \"main\",   main_branch = \"main\",   message = \"Init repo\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/push_main.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push main to server — push_main","text":"project_path project_path branch branch name. main default main_branch main branch name. main default message commit message","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/push_master.html","id":null,"dir":"Reference","previous_headings":"","what":"Push master to server — push_master","title":"Push master to server — push_master","text":"Push master server","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/push_master.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push master to server — push_master","text":"","code":"push_master(   project_path,   branch = \"master\",   main_branch = \"master\",   message = \"Init repo\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/push_master.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push master to server — push_master","text":"project_path project_path branch branch name. main default main_branch main branch name. main default message commit message","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/read_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"read_ci — read_ci","title":"read_ci — read_ci","text":"Import yaml CI files list","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/read_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"read_ci — read_ci","text":"","code":"read_ci(path = \"./.gitlab-ci.yml\")"},{"path":"https://thinkr-open.github.io/lozen/reference/read_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"read_ci — read_ci","text":"path Path yaml file","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/read_ci.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"read_ci — read_ci","text":"list list CI parameters","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/read_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"read_ci — read_ci","text":"","code":"yaml_path <- system.file(\"yaml\", \".gitlab-ci-shiny.yml\", package = \"lozen\") ci_list <- read_ci(path = yaml_path)"},{"path":"https://thinkr-open.github.io/lozen/reference/render_book.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a book with lozen formats — render_book","title":"Render a book with lozen formats — render_book","text":"Render book lozen formats","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/render_book.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a book with lozen formats — render_book","text":"","code":"render_book(   rmd_to_render = \"index.Rmd\",   output_format = c(\"lozen::bs4_book_template\", \"lozen::paged_template\"),   output_dir = \"_book\",   ... )"},{"path":"https://thinkr-open.github.io/lozen/reference/render_book.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a book with lozen formats — render_book","text":"rmd_to_render rmd file render output_format format user render book output_dir output directory ... extra params used bookdown::render_book","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/render_book.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Render a book with lozen formats — render_book","text":"rendered book","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/render_book.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Render a book with lozen formats — render_book","text":"","code":"if (FALSE) { render_book(\"index.Rmd\", output_format = \"lozen::bs4_book_template\") render_book(\"index.Rmd\", output_format = \"lozen::paged_template\") }"},{"path":"https://thinkr-open.github.io/lozen/reference/use_dev_history.html","id":null,"dir":"Reference","previous_headings":"","what":"Une a dev histroy file — use_dev_history","title":"Une a dev histroy file — use_dev_history","text":"Une dev histroy file Une dev histroy file","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_dev_history.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Une a dev histroy file — use_dev_history","text":"","code":"use_dev_history(path = \".\", type = c(\"package\", \"renv\"))  use_dev_history(path = \".\", type = c(\"package\", \"renv\"))"},{"path":"https://thinkr-open.github.io/lozen/reference/use_dev_history.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Une a dev histroy file — use_dev_history","text":"path Path project add dev_history type Type dev_history. Multiple types possible among \"package\", \"book\", \"renv\".","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_dev_history.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Une a dev histroy file — use_dev_history","text":"","code":"withr::with_tempdir({   use_dev_history(path = \".\", type = c(\"package\", \"book\", \"renv\")) }) withr::with_tempdir({   use_dev_history(path = \".\", type = c(\"package\", \"book\", \"renv\")) })"},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci.html","id":null,"dir":"Reference","previous_headings":"","what":"Set gitlab continuous integration — use_gitlab_ci","title":"Set gitlab continuous integration — use_gitlab_ci","text":"Set gitlab continuous integration","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set gitlab continuous integration — use_gitlab_ci","text":"","code":"use_gitlab_ci(   image = \"rocker/verse\",   repo_name = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\",   project_path = \".\",   type = \"check-coverage-pkgdown\",   bookdown_output_format = c(\"lozen::paged_template\", \"lozen::bs4_book_template\"),   overwrite = TRUE )"},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set gitlab continuous integration — use_gitlab_ci","text":"image Docker image used basis. See https://github.com/rocker-org/rocker repo_name REPO_NAME environment variable R CRAN mirror used project_path Path project add CI . type type CI template use bookdown_output_format type=\"bookdown\" corresponds function used output bookdown overwrite whether overwrite existing GitLab CI yml file","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Set gitlab continuous integration — use_gitlab_ci","text":"See use_gitlab_ci","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set gitlab continuous integration — use_gitlab_ci","text":"","code":"withr::with_tempdir({   use_gitlab_ci(image = \"r-base\") }) #> ℹ There is no ./.gitlab-ci.yml in your project, a new one will be created. #> [1] \"./.gitlab-ci.yml\"  withr::with_tempdir({   use_gitlab_ci(     image = \"rocker/verse\",     repo_name = \"https://packagemanager.rstudio.com/all/__linux__/focal/latest\",     type = \"check-coverage-pkgdown\"   ) }) #> ℹ There is no ./.gitlab-ci.yml in your project, a new one will be created. #> [1] \"./.gitlab-ci.yml\""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci_deploy_connect.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a job to deploy a something on Connect — use_gitlab_ci_deploy_connect","title":"Add a job to deploy a something on Connect — use_gitlab_ci_deploy_connect","text":"function creates file .gitlab-ci.yml deploy something Connect using lozen::deploy_connect_* functions.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci_deploy_connect.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a job to deploy a something on Connect — use_gitlab_ci_deploy_connect","text":"","code":"use_gitlab_ci_deploy_connect(   deploy_function = c(\"deploy_connect_shiny\", \"deploy_connect_pkgdown\",     \"deploy_connect_bookdown\"),   stage_name = \"deploy_connect\",   image = \"rocker/verse:latest\",   dir = \".\",   append = TRUE,   file_name = \".gitlab-ci.yml\",   ... )  use_gitlab_ci_deploy_connect_bookdown(...)  use_gitlab_ci_deploy_connect_pkgdown(...)  use_gitlab_ci_deploy_connect_shiny(...)"},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci_deploy_connect.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a job to deploy a something on Connect — use_gitlab_ci_deploy_connect","text":"deploy_function string caracter name deploy_connect_* functions use. stage_name name CI stage (need unique .gitlab-ci.yml file) image Docker image use dir Directory deploy append append file .gitlab-ci.yml already exists file_name Name yaml file ... param pass  deploy_function","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci_deploy_connect.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a job to deploy a something on Connect — use_gitlab_ci_deploy_connect","text":"used side effects","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci_deploy_connect.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add a job to deploy a something on Connect — use_gitlab_ci_deploy_connect","text":"using , please follow steps : Ask Mission Lead Dev deployment token Connect, one need use. Add environment variables private variable hidden GitLab repository: Settings > CI/CD > Variables > Expand > Add variable /!\\ check \"Protected\" create variable, active protected branches Add CONNECT_USER username. Add CONNECT_TOKEN token. want deploy app sure app.R deploy root folder, (needed: use golem::add_rstudioconnect_file()) NB: environment variable CONNECT_URL already defined generically forge (group \"thinkr\").","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/use_gitlab_ci_deploy_connect.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a job to deploy a something on Connect — use_gitlab_ci_deploy_connect","text":"","code":"# use_gitlab_ci_deploy_connect_bookdown() #> ! There is no _book directory at the root of your package. You should probably compile your book with `lozen::render_book(\"index.Rmd\", output_format = \"lozen::bs4_book_template\")` or `lozen::render_book(\"index.Rmd\", output_format = \"lozen::paged_template\")` first. #> ! Once this is done, please ensure your _book directory is not listed in your .gitignore file ! #> ℹ There is no ./.gitlab-ci.yml in your project, a new one will be created. #> [1] \"./.gitlab-ci.yml\" # Exemple avec pkgdown deployed_pkgdown <- tempfile(pattern = \"pkgdown\") dir.create(deployed_pkgdown) # rstudioapi::filesPaneNavigate(deployed_pkgdown) withr::with_dir(deployed_pkgdown, {   use_gitlab_ci(type = \"check-coverage-pkgdown\")   use_gitlab_ci_deploy_connect_pkgdown() }) #> ℹ There is no ./.gitlab-ci.yml in your project, a new one will be created. #> ℹ Appending new stages in ./.gitlab-ci.yml #> [1] \"./.gitlab-ci.yml\" deployed_shiny <- tempfile(pattern = \"shiny\") dir.create(deployed_shiny) # rstudioapi::filesPaneNavigate(deployed_shiny) # Exemple avec shiny withr::with_dir(deployed_shiny, {   use_gitlab_ci(type = \"check-coverage-pkgdown\")   use_gitlab_ci_deploy_connect_shiny() }) #> ℹ There is no ./.gitlab-ci.yml in your project, a new one will be created. #> ! There is no app.R at the root of your package. You should probably run `golem::add_rstudioconnect_file()` to create this file. #> ℹ Appending new stages in ./.gitlab-ci.yml #> [1] \"./.gitlab-ci.yml\""},{"path":"https://thinkr-open.github.io/lozen/reference/visualise_commits.html","id":null,"dir":"Reference","previous_headings":"","what":"Visualise the nature of the developments (conventional commits) — visualise_commits","title":"Visualise the nature of the developments (conventional commits) — visualise_commits","text":"Visualise nature developments (conventional commits)","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/visualise_commits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Visualise the nature of the developments (conventional commits) — visualise_commits","text":"","code":"visualise_commits(   project_id,   gitlab_url = Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\"),   private_token = Sys.getenv(\"GITLAB_TOKEN\"),   path,   ref = NULL,   date_min = Sys.Date() - 7,   date_max = Sys.Date(),   language = c(\"fr\", \"en\"),   conv_tags = c(\"feat\", \"fix\", \"doc\", \"test\", \"ci\", \"refactor\", \"style\", \"chore\"),   color = \"#15b7d6\" )"},{"path":"https://thinkr-open.github.io/lozen/reference/visualise_commits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Visualise the nature of the developments (conventional commits) — visualise_commits","text":"project_id Id GitLab project gitlab_url URL GitLab Forge private_token private GitLab instance token allowed use \"api\". path Path project already pulled locally ref Branch name (commit sha) explore commits. default NULL, use default branch date_min Minimal date search . oldest date. date_max Maximal date search . recent date. language Character. Language: 'fr' ou 'en'. conv_tags Conventional commits tags color blue color graph","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/visualise_commits.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Visualise the nature of the developments (conventional commits) — visualise_commits","text":"ggplot","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/visualise_commits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Visualise the nature of the developments (conventional commits) — visualise_commits","text":"","code":"if (FALSE) {  visualise_commits(   project_id = \"<get_your_id_project>\",   gitlab_url = Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\"),   date_min = \"2022-09-22\",   date_max = \"2022-09-29\",   private_token = Sys.getenv(\"GITLAB_TOKEN\") )  # Or on project already cloned tempdir <-   clone_locally(full_url = \"https://gitlab.com/my_name/my_repo\", open = FALSE)  visualise_commits(   path = tempdir,   date_min = \"2022-09-22\",   date_max = \"2022-09-29\" ) }"},{"path":"https://thinkr-open.github.io/lozen/reference/with_gitlab_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Test gitlab CI workflows — with_gitlab_project","title":"Test gitlab CI workflows — with_gitlab_project","text":"functions allows users launch expression initiate given gitlab ci workflow within dummy project #' gitlab instance.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/with_gitlab_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Test gitlab CI workflows — with_gitlab_project","text":"","code":"with_gitlab_project(   gitlab_url = Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\"),   namespace_id,   private_token = Sys.getenv(\"GITLAB_TOKEN\"),   connect_url = Sys.getenv(\"CONNECT_URL\"),   connect_api_token = Sys.getenv(\"CONNECT_TOKEN\"),   connect_user = Sys.getenv(\"CONNECT_USER\"),   connect_name = Sys.getenv(\"CONNECT_NAME\", unset = \"connect\"),   project_name = \"lozen.test.project\",   branch_focus_for_ci = \"main\",   exp )"},{"path":"https://thinkr-open.github.io/lozen/reference/with_gitlab_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Test gitlab CI workflows — with_gitlab_project","text":"gitlab_url character string. url gilab instance. namespace_id integer. id gitlab group create project . private_token character string. token gain access gitlab api. connect_url character string. URL Connect server. connect_api_token character string. token gain access Connect API. token must granted admin access. connect_user character string. User name Connect. connect_name character string. Name Connect server (default \"connect\") project_name character string. name project created. branch_focus_for_ci Name branch targeted CI pipeline. exp valid R expression initializing project gitlab ci workflow.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/with_gitlab_project.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Test gitlab CI workflows — with_gitlab_project","text":"data.frame containing information jobs gitlab project.","code":""},{"path":"https://thinkr-open.github.io/lozen/reference/with_gitlab_project.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Test gitlab CI workflows — with_gitlab_project","text":"","code":"if (FALSE) { output <- with_gitlab_project(   gitlab_url = Sys.getenv(\"GITLAB_URL\", unset = \"https://gitlab.com\"),   namespace_id = NULL,   private_token = Sys.getenv(\"GITLAB_TOKEN\"),   project_name = \"bookdown.test.project\",   exp = {     lozen::create_r_project(       project_path = getwd(),       type = \"book\",       name_licence = \"Bobo\",       type_licence = usethis::use_mit_license     )     lozen::use_gitlab_ci(type = \"bookdown\", bookdown_output_format = \"lozen::paged_template\")   } ) output }"},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"major-1-3-0","dir":"Changelog","previous_headings":"","what":"Major","title":"lozen 1.3.0","text":"GitLab package, book golem GitHub package Modify vignettes make user-friendly R package : deployment pkgdown can made Gitlab Pages / Posit Connect golem shiny app : deployment pkgdown can made Gitlab Pages / deployment app Posit Connect bookdown : book compiled either pagedown::paged_template bookdown::bs4_book can deployed Gitlab Pages / Posit Connect","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"minor-1-3-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"lozen 1.3.0","text":"Modifications made make {lozen} usable `fusen::inflate_all()``","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"major-1-2-0","dir":"Changelog","previous_headings":"","what":"Major","title":"lozen 1.2.0","text":"Rename token packages go suggest","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"minor-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"lozen 1.2.0","text":"Remove get_author function thinkridentity","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"major-1-1-0","dir":"Changelog","previous_headings":"","what":"Major","title":"lozen 1.1.0","text":"Allow requests new GitHub board (GraphQL API) Move issues comments GitLab Github move_issues_from_gitlab_to_github() (#118)","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"minor-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"lozen 1.1.0","text":"Add info Lead Dev first issue need think dev.thinkr.fr devs .onLoad() message envars temporary deactivated","code":""},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"hotfix-1-0-1","dir":"Changelog","previous_headings":"","what":"Hotfix","title":"lozen 1.0.1","text":"Change name vignette add create weekly/daily","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"lozen-100","dir":"Changelog","previous_headings":"","what":"lozen 1.0.0","title":"lozen 1.0.0","text":"Use former version {thinkridentity} new basis {lozen} - remove everything related management design graphic system","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"major-1-0-0","dir":"Changelog","previous_headings":"","what":"Major","title":"lozen 1.0.0","text":"Use fusen-style package Add functions manage templates issues GitLab GitHub Add function generate issue presented client kick-mission Remove function multilist_to_tibble() move gitlabr","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"minor-1-0-0","dir":"Changelog","previous_headings":"","what":"Minor","title":"lozen 1.0.0","text":"Allow weekly/daily present issues created validated today Allow url Connect / end","code":""},{"path":[]},{"path":[]},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"breaking-changes-1-0-0","dir":"Changelog","previous_headings":"Archive: former versions of {thinkridentity} > 0.0.3.9000","what":"Breaking changes","title":"lozen 1.0.0","text":"add_gitlab_templates() renamed add_git_templates()","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"major-1-0-0-1","dir":"Changelog","previous_headings":"Archive: former versions of {thinkridentity} > 0.0.3.9000","what":"Major","title":"lozen 1.0.0","text":"Add add_issue_clients_github() welcome issue GitHub Update instructions delivery “dev_history_deliverables.R” Add instructions deploy connect CI “dev_history_connect.R”","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"id_003-1-0-0","dir":"Changelog","previous_headings":"Archive: former versions of {thinkridentity}","what":"0.0.3","title":"lozen 1.0.0","text":"Add full template create new project GitLab associated R code","code":""},{"path":"https://thinkr-open.github.io/lozen/news/index.html","id":"id_002-1-0-0","dir":"Changelog","previous_headings":"Archive: former versions of {thinkridentity}","what":"0.0.2","title":"lozen 1.0.0","text":"PDF template creation thinkR_pdf_create_header() YAML header PDF template amend_yaml_pdf_output() get_author: get infos ThinkR authors Add palettes ggplot2 scales Add gitlab-ci Transform package","code":""},{"path":[]},{"path":[]}]

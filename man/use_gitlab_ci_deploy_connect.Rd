% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/use_gitlab_ci_deploy_connect.R
\name{use_gitlab_ci_deploy_connect}
\alias{use_gitlab_ci_deploy_connect}
\alias{use_gitlab_ci_deploy_connect_pkgdown}
\alias{use_gitlab_ci_deploy_connect_shiny}
\title{Add a job to deploy a something on Connect}
\usage{
use_gitlab_ci_deploy_connect(
  deploy_function = c("deploy_connect_shiny", "deploy_connect_pkgdown"),
  stage_name = "deploy_connect",
  image = "rocker/verse:latest",
  dir = ".",
  append = TRUE,
  file_name = ".gitlab-ci.yml",
  ...
)

use_gitlab_ci_deploy_connect_pkgdown(...)

use_gitlab_ci_deploy_connect_shiny(...)
}
\arguments{
\item{deploy_function}{string caracter name of the \verb{deploy_connect_*} functions to use.}

\item{stage_name}{name of the CI stage (need to be unique in the .gitlab-ci.yml file)}

\item{image}{Docker image to use}

\item{dir}{Directory to deploy}

\item{append}{append the file .gitlab-ci.yml if it already exists}

\item{file_name}{Name of the yaml file}

\item{...}{param to pass to  deploy_function}
}
\value{
used for side effects
}
\description{
This function creates a file .gitlab-ci.yml
that will deploy something on Connect using a \verb{lozen::deploy_connect_*} functions.
}
\details{
Before using it, please follow these steps :
\itemize{
\item Ask the Mission Lead Dev for their deployment token on Connect, this is the one you will need to use.
\item Add the environment variables in the private variable hidden in the GitLab repository:
Settings > CI/CD > Variables > Expand > Add variable /!\ if you check "Protected" when you create the variable, then it will be active only for protected branches
\itemize{
\item Add \code{CONNECT_USER} with username.
\item Add \code{CONNECT_TOKEN} with the token.
}
}

If you want to deploy an app
Be sure to have an app.R to deploy at the root of the folder, (if needed: use \code{\link[golem:rstudio_deploy]{golem::add_rstudioconnect_file()}})

NB: The environment variable \code{CONNECT_URL} is already defined generically on forge (only for group "thinkr").
}
\examples{
#
# Exemple avec pkgdown
deployed_pkgdown <- tempfile(pattern = "pkgdown")
dir.create(deployed_pkgdown)
# rstudioapi::filesPaneNavigate(deployed_pkgdown)
withr::with_dir(deployed_pkgdown, {
  use_gitlab_ci(type = "check-coverage-pkgdown")
  use_gitlab_ci_deploy_connect_pkgdown()
})
deployed_shiny <- tempfile(pattern = "shiny")
dir.create(deployed_shiny)
# rstudioapi::filesPaneNavigate(deployed_shiny)
# Exemple avec shiny
withr::with_dir(deployed_shiny, {
  use_gitlab_ci(type = "check-coverage-pkgdown")
  use_gitlab_ci_deploy_connect_shiny()
})
}
